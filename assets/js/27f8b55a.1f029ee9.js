"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[1942],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5050:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const i={title:"Content Security Policy",description:"Learn how to set a Content Security Policy (CSP) for your Next.js application.",related:{links:["app/building-your-application/routing/middleware","app/api-reference/functions/headers"]}},o=void 0,s={unversionedId:"app/building-your-application/configuring/content-security-policy",id:"app/building-your-application/configuring/content-security-policy",title:"Content Security Policy",description:"Learn how to set a Content Security Policy (CSP) for your Next.js application.",source:"@site/docs/02-app/01-building-your-application/07-configuring/15-content-security-policy.mdx",sourceDirName:"02-app/01-building-your-application/07-configuring",slug:"/app/building-your-application/configuring/content-security-policy",permalink:"/docs/app/building-your-application/configuring/content-security-policy",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-app/01-building-your-application/07-configuring/15-content-security-policy.mdx",tags:[],version:"current",sidebarPosition:15,frontMatter:{title:"Content Security Policy",description:"Learn how to set a Content Security Policy (CSP) for your Next.js application.",related:{links:["app/building-your-application/routing/middleware","app/api-reference/functions/headers"]}},sidebar:"nextJsSidebar",previous:{title:"Draft Mode",permalink:"/docs/app/building-your-application/configuring/draft-mode"},next:{title:"Deploying",permalink:"/docs/app/building-your-application/deploying/"}},c={},l=[{value:"Nonces",id:"nonces",level:2},{value:"Why use a nonce?",id:"why-use-a-nonce",level:3},{value:"Adding a nonce with Middleware",id:"adding-a-nonce-with-middleware",level:3},{value:"Reading the nonce",id:"reading-the-nonce",level:3},{value:"Version History",id:"version-history",level:2}],p={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"{/",(0,a.kt)("em",{parentName:"p"}," The content of this doc is shared between the app and pages router. You can use the  component to add content that is specific to the Pages Router. Any shared content should not be wrapped in a component. "),"/}"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTTP/CSP"},"Content Security Policy (CSP)")," is important to guard your Next.js application against various security threats such as cross-site scripting (XSS), clickjacking, and other code injection attacks."),(0,a.kt)("p",null,"By using CSP, developers can specify which origins are permissible for content sources, scripts, stylesheets, images, fonts, objects, media (audio, video), iframes, and more."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Examples"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/vercel/next.js/tree/canary/examples/with-strict-csp"},"Strict CSP")))),(0,a.kt)("h2",{id:"nonces"},"Nonces"),(0,a.kt)("p",null,"A ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/nonce"},"nonce")," is a unique, random string of characters created for a one-time use. It is used in conjunction with CSP to selectively allow certain inline scripts or styles to execute, bypassing strict CSP directives."),(0,a.kt)("h3",{id:"why-use-a-nonce"},"Why use a nonce?"),(0,a.kt)("p",null,"Even though CSPs are designed to block malicious scripts, there are legitimate scenarios where inline scripts are necessary. In such cases, nonces offer a way to allow these scripts to execute if they have the correct nonce."),(0,a.kt)("h3",{id:"adding-a-nonce-with-middleware"},"Adding a nonce with Middleware"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/routing/middleware"},"Middleware")," enables you to add headers and generate nonces before the page renders."),(0,a.kt)("p",null,"Every time a page is viewed, a fresh nonce should be generated. This means that you ",(0,a.kt)("strong",{parentName:"p"},"must use dynamic rendering to add nonces"),"."),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="middleware.ts" switcher',filename:'"middleware.ts"',switcher:!0},"import { NextRequest, NextResponse } from \"next/server\";\n\nexport function middleware(request: NextRequest) {\n    const nonce = Buffer.from(crypto.randomUUID()).toString(\"base64\");\n    const cspHeader = `\n    default-src 'self';\n    script-src 'self' 'nonce-${nonce}' 'strict-dynamic';\n    style-src 'self' 'nonce-${nonce}';\n    img-src 'self' blob: data:;\n    font-src 'self';\n    object-src 'none';\n    base-uri 'self';\n    form-action 'self';\n    frame-ancestors 'none';\n    block-all-mixed-content;\n    upgrade-insecure-requests;\n`;\n\n    const requestHeaders = new Headers(request.headers);\n    requestHeaders.set(\"x-nonce\", nonce);\n    requestHeaders.set(\n        \"Content-Security-Policy\",\n        // Replace newline characters and spaces\n        cspHeader.replace(/\\s{2,}/g, \" \").trim(),\n    );\n\n    return NextResponse.next({\n        headers: requestHeaders,\n        request: {\n            headers: requestHeaders,\n        },\n    });\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js" switcher',filename:'"middleware.js"',switcher:!0},"import { NextResponse } from \"next/server\";\n\nexport function middleware(request) {\n    const nonce = Buffer.from(crypto.randomUUID()).toString(\"base64\");\n    const cspHeader = `\n    default-src 'self';\n    script-src 'self' 'nonce-${nonce}' 'strict-dynamic';\n    style-src 'self' 'nonce-${nonce}';\n    img-src 'self' blob: data:;\n    font-src 'self';\n    object-src 'none';\n    base-uri 'self';\n    form-action 'self';\n    frame-ancestors 'none';\n    block-all-mixed-content;\n    upgrade-insecure-requests;\n`;\n\n    const requestHeaders = new Headers(request.headers);\n    requestHeaders.set(\"x-nonce\", nonce);\n    requestHeaders.set(\n        \"Content-Security-Policy\",\n        // Replace newline characters and spaces\n        cspHeader.replace(/\\s{2,}/g, \" \").trim(),\n    );\n\n    return NextResponse.next({\n        headers: requestHeaders,\n        request: {\n            headers: requestHeaders,\n        },\n    });\n}\n")),(0,a.kt)("p",null,"By default, Middleware runs on all requests. You can filter Middleware to run on specific paths using a ",(0,a.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/routing/middleware#matcher"},(0,a.kt)("inlineCode",{parentName:"a"},"matcher")),"."),(0,a.kt)("p",null,"We recommend ignoring matching prefetches (from ",(0,a.kt)("inlineCode",{parentName:"p"},"next/link"),") and static assets that don't need the CSP header."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="middleware.ts" switcher',filename:'"middleware.ts"',switcher:!0},'export const config = {\n    matcher: [\n        /*\n         * Match all request paths except for the ones starting with:\n         * - api (API routes)\n         * - _next/static (static files)\n         * - _next/image (image optimization files)\n         * - favicon.ico (favicon file)\n         */\n        {\n            source: "/((?!api|_next/static|_next/image|favicon.ico).*)",\n            missing: [\n                { type: "header", key: "next-router-prefetch" },\n                { type: "header", key: "purpose", value: "prefetch" },\n            ],\n        },\n    ],\n};\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js" switcher',filename:'"middleware.js"',switcher:!0},'export const config = {\n    matcher: [\n        /*\n         * Match all request paths except for the ones starting with:\n         * - api (API routes)\n         * - _next/static (static files)\n         * - _next/image (image optimization files)\n         * - favicon.ico (favicon file)\n         */\n        {\n            source: "/((?!api|_next/static|_next/image|favicon.ico).*)",\n            missing: [\n                { type: "header", key: "next-router-prefetch" },\n                { type: "header", key: "purpose", value: "prefetch" },\n            ],\n        },\n    ],\n};\n')),(0,a.kt)("h3",{id:"reading-the-nonce"},"Reading the nonce"),(0,a.kt)("p",null,"You can now read the nonce from a ",(0,a.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/rendering/server-components"},"Server Component")," using ",(0,a.kt)("a",{parentName:"p",href:"/docs/app/api-reference/functions/headers"},(0,a.kt)("inlineCode",{parentName:"a"},"headers")),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'filename="app/page.tsx" switcher',filename:'"app/page.tsx"',switcher:!0},'import { headers } from "next/headers";\nimport Script from "next/script";\n\nexport default function Page() {\n    const nonce = headers().get("x-nonce");\n\n    return (\n        <Script\n            src="https://www.googletagmanager.com/gtag/js"\n            strategy="afterInteractive"\n            nonce={nonce}\n        />\n    );\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'filename="app/page.jsx" switcher',filename:'"app/page.jsx"',switcher:!0},'import { headers } from "next/headers";\nimport Script from "next/script";\n\nexport default function Page() {\n    const nonce = headers().get("x-nonce");\n\n    return (\n        <Script\n            src="https://www.googletagmanager.com/gtag/js"\n            strategy="afterInteractive"\n            nonce={nonce}\n        />\n    );\n}\n')),(0,a.kt)("h2",{id:"version-history"},"Version History"),(0,a.kt)("p",null,"We recommend using ",(0,a.kt)("inlineCode",{parentName:"p"},"v13.4.20+")," of Next.js to properly handle and apply nonces."))}d.isMDXComponent=!0}}]);