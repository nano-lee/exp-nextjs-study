"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[4675],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},g=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),s=m(n),u=r,c=s["".concat(l,".").concat(u)]||s[u]||d[u]||i;return n?a.createElement(c,p(p({ref:t},g),{},{components:n})):a.createElement(c,p({ref:t},g))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[s]="string"==typeof e?e:r,p[1]=o;for(var m=2;m<i;m++)p[m]=n[m];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7337:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const i={title:"opengraph-image and twitter-image",description:"API Reference for the Open Graph Image and Twitter Image file conventions."},p=void 0,o={unversionedId:"app/api-reference/file-conventions/metadata/opengraph-image",id:"app/api-reference/file-conventions/metadata/opengraph-image",title:"opengraph-image and twitter-image",description:"API Reference for the Open Graph Image and Twitter Image file conventions.",source:"@site/docs/02-app/02-api-reference/02-file-conventions/01-metadata/opengraph-image.mdx",sourceDirName:"02-app/02-api-reference/02-file-conventions/01-metadata",slug:"/app/api-reference/file-conventions/metadata/opengraph-image",permalink:"/docs/app/api-reference/file-conventions/metadata/opengraph-image",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-app/02-api-reference/02-file-conventions/01-metadata/opengraph-image.mdx",tags:[],version:"current",frontMatter:{title:"opengraph-image and twitter-image",description:"API Reference for the Open Graph Image and Twitter Image file conventions."},sidebar:"nextJsSidebar",previous:{title:"manifest.json",permalink:"/docs/app/api-reference/file-conventions/metadata/manifest"},next:{title:"robots.txt",permalink:"/docs/app/api-reference/file-conventions/metadata/robots"}},l={},m=[{value:"Image files (.jpg, .png, .gif)",id:"image-files-jpg-png-gif",level:2},{value:"<code>opengraph-image</code>",id:"opengraph-image",level:3},{value:"<code>twitter-image</code>",id:"twitter-image",level:3},{value:"<code>opengraph-image.alt.txt</code>",id:"opengraph-imagealttxt",level:3},{value:"<code>twitter-image.alt.txt</code>",id:"twitter-imagealttxt",level:3},{value:"Generate images using code (.js, .ts, .tsx)",id:"generate-images-using-code-js-ts-tsx",level:2},{value:"Props",id:"props",level:3},{value:"<code>params</code> (optional)",id:"params-optional",level:4},{value:"Returns",id:"returns",level:3},{value:"Config exports",id:"config-exports",level:3},{value:"<code>alt</code>",id:"alt",level:4},{value:"<code>size</code>",id:"size",level:4},{value:"<code>contentType</code>",id:"contenttype",level:4},{value:"Route Segment Config",id:"route-segment-config",level:4},{value:"Examples",id:"examples",level:3},{value:"Using external data",id:"using-external-data",level:4},{value:"Version History",id:"version-history",level:2}],g={toc:m},s="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"opengraph-image")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter-image")," file conventions allow you to set Open Graph and Twitter images for a route segment."),(0,r.kt)("p",null,"They are useful for setting the images that appear on social networks and messaging apps when a user shares a link to your site."),(0,r.kt)("p",null,"There are two ways to set Open Graph and Twitter images:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#image-files-jpg-png-gif"},"Using image files (.jpg, .png, .gif)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#generate-images-using-code-js-ts-tsx"},"Using code to generate images (.js, .ts, .tsx)"))),(0,r.kt)("h2",{id:"image-files-jpg-png-gif"},"Image files (.jpg, .png, .gif)"),(0,r.kt)("p",null,"Use an image file to set a route segment's shared image by placing an ",(0,r.kt)("inlineCode",{parentName:"p"},"opengraph-image")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter-image")," image file in the segment."),(0,r.kt)("p",null,"Next.js will evaluate the file and automatically add the appropriate tags to your app's ",(0,r.kt)("inlineCode",{parentName:"p"},"<head>")," element."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"File convention"),(0,r.kt)("th",{parentName:"tr",align:null},"Supported file types"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#opengraph-image"},(0,r.kt)("inlineCode",{parentName:"a"},"opengraph-image"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".jpg"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".jpeg"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".png"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".gif"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#twitter-image"},(0,r.kt)("inlineCode",{parentName:"a"},"twitter-image"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".jpg"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".jpeg"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".png"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".gif"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#opengraph-imagealttxt"},(0,r.kt)("inlineCode",{parentName:"a"},"opengraph-image.alt"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".txt"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#twitter-imagealttxt"},(0,r.kt)("inlineCode",{parentName:"a"},"twitter-image.alt"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".txt"))))),(0,r.kt)("h3",{id:"opengraph-image"},(0,r.kt)("inlineCode",{parentName:"h3"},"opengraph-image")),(0,r.kt)("p",null,"Add an ",(0,r.kt)("inlineCode",{parentName:"p"},"opengraph-image.(jpg|jpeg|png|gif)")," image file to any route segment."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'filename="<head> output"',filename:'"<head>','output"':!0},'<meta property="og:image" content="<generated>" />\n<meta property="og:image:type" content="<generated>" />\n<meta property="og:image:width" content="<generated>" />\n<meta property="og:image:height" content="<generated>" />\n')),(0,r.kt)("h3",{id:"twitter-image"},(0,r.kt)("inlineCode",{parentName:"h3"},"twitter-image")),(0,r.kt)("p",null,"Add a ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter-image.(jpg|jpeg|png|gif)")," image file to any route segment."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'filename="<head> output"',filename:'"<head>','output"':!0},'<meta name="twitter:image" content="<generated>" />\n<meta name="twitter:image:type" content="<generated>" />\n<meta name="twitter:image:width" content="<generated>" />\n<meta name="twitter:image:height" content="<generated>" />\n')),(0,r.kt)("h3",{id:"opengraph-imagealttxt"},(0,r.kt)("inlineCode",{parentName:"h3"},"opengraph-image.alt.txt")),(0,r.kt)("p",null,"Add an accompanying ",(0,r.kt)("inlineCode",{parentName:"p"},"opengraph-image.alt.txt")," file in the same route segment as the ",(0,r.kt)("inlineCode",{parentName:"p"},"opengraph-image.(jpg|jpeg|png|gif)")," image it's alt text."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-txt",metastring:'filename="opengraph-image.alt.txt"',filename:'"opengraph-image.alt.txt"'},"About Acme\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'filename="<head> output"',filename:'"<head>','output"':!0},'<meta property="og:image:alt" content="About Acme" />\n')),(0,r.kt)("h3",{id:"twitter-imagealttxt"},(0,r.kt)("inlineCode",{parentName:"h3"},"twitter-image.alt.txt")),(0,r.kt)("p",null,"Add an accompanying ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter-image.alt.txt")," file in the same route segment as the ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter-image.(jpg|jpeg|png|gif)")," image it's alt text."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-txt",metastring:'filename="twitter-image.alt.txt"',filename:'"twitter-image.alt.txt"'},"About Acme\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'filename="<head> output"',filename:'"<head>','output"':!0},'<meta property="twitter:image:alt" content="About Acme" />\n')),(0,r.kt)("h2",{id:"generate-images-using-code-js-ts-tsx"},"Generate images using code (.js, .ts, .tsx)"),(0,r.kt)("p",null,"In addition to using ",(0,r.kt)("a",{parentName:"p",href:"#image-files-jpg-png-gif"},"literal image files"),", you can programmatically ",(0,r.kt)("strong",{parentName:"p"},"generate")," images using code."),(0,r.kt)("p",null,"Generate a route segment's shared image by creating an ",(0,r.kt)("inlineCode",{parentName:"p"},"opengraph-image")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter-image")," route that default exports a function."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"File convention"),(0,r.kt)("th",{parentName:"tr",align:null},"Supported file types"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"opengraph-image")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".js"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".ts"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".tsx"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"twitter-image")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},".js"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".ts"),", ",(0,r.kt)("inlineCode",{parentName:"td"},".tsx"))))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Good to know")),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"By default, generated images are ",(0,r.kt)("a",{parentName:"li",href:"/docs/app/building-your-application/rendering/server-components#static-rendering-default"},(0,r.kt)("strong",{parentName:"a"},"statically optimized"))," (generated at build time and cached) unless they use ",(0,r.kt)("a",{parentName:"li",href:"/docs/app/building-your-application/rendering/server-components#server-rendering-strategies#dynamic-functions"},"dynamic functions")," or uncached data."),(0,r.kt)("li",{parentName:"ul"},"You can generate multiple Images in the same file using ",(0,r.kt)("a",{parentName:"li",href:"/docs/app/api-reference/functions/generate-image-metadata"},(0,r.kt)("inlineCode",{parentName:"a"},"generateImageMetadata")),"."))),(0,r.kt)("p",null,"The easiest way to generate an image is to use the ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/api-reference/functions/image-response"},"ImageResponse")," API from ",(0,r.kt)("inlineCode",{parentName:"p"},"next/server"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'filename="app/about/opengraph-image.tsx" switcher',filename:'"app/about/opengraph-image.tsx"',switcher:!0},"import { ImageResponse } from 'next/og'\n\n// Route segment config\nexport const runtime = 'edge'\n\n// Image metadata\nexport const alt = 'About Acme'\nexport const size = {\n  width: 1200,\n  height: 630,\n}\n\nexport const contentType = 'image/png'\n\n// Image generation\nexport default async function Image() {\n  // Font\n  const interSemiBold = fetch(\n    new URL('./Inter-SemiBold.ttf', import.meta.url)\n  ).then((res) => res.arrayBuffer())\n\n  return new ImageResponse(\n    (\n      // ImageResponse JSX element\n      <div\n        style={{\n          fontSize: 128,\n          background: 'white',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        About Acme\n      </div>\n    ),\n    // ImageResponse options\n    {\n      // For convenience, we can re-use the exported opengraph-image\n      // size config to also set the ImageResponse's width and height.\n      ...size,\n      fonts: [\n        {\n          name: 'Inter',\n          data: await interSemiBold,\n          style: 'normal',\n          weight: 400,\n        },\n      ],\n    }\n  )\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'filename="app/about/opengraph-image.js" switcher',filename:'"app/about/opengraph-image.js"',switcher:!0},"import { ImageResponse } from 'next/og'\n\n// Route segment config\nexport const runtime = 'edge'\n\n// Image metadata\nexport const alt = 'About Acme'\nexport const size = {\n  width: 1200,\n  height: 630,\n}\n\nexport const contentType = 'image/png'\n\n// Image generation\nexport default async function Image() {\n  // Font\n  const interSemiBold = fetch(\n    new URL('./Inter-SemiBold.ttf', import.meta.url)\n  ).then((res) => res.arrayBuffer())\n\n  return new ImageResponse(\n    (\n      // ImageResponse JSX element\n      <div\n        style={{\n          fontSize: 128,\n          background: 'white',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        About Acme\n      </div>\n    ),\n    // ImageResponse options\n    {\n      // For convenience, we can re-use the exported opengraph-image\n      // size config to also set the ImageResponse's width and height.\n      ...size,\n      fonts: [\n        {\n          name: 'Inter',\n          data: await interSemiBold,\n          style: 'normal',\n          weight: 400,\n        },\n      ],\n    }\n  )\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'filename="<head> output"',filename:'"<head>','output"':!0},'<meta property="og:image" content="<generated>" />\n<meta property="og:image:alt" content="About Acme" />\n<meta property="og:image:type" content="image/png" />\n<meta property="og:image:width" content="1200" />\n<meta property="og:image:height" content="630" />\n')),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)("p",null,"The default export function receives the following props:"),(0,r.kt)("h4",{id:"params-optional"},(0,r.kt)("inlineCode",{parentName:"h4"},"params")," (optional)"),(0,r.kt)("p",null,"An object containing the ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/routing/dynamic-routes"},"dynamic route parameters")," object from the root segment down to the segment ",(0,r.kt)("inlineCode",{parentName:"p"},"opengraph-image")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter-image")," is colocated in."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'filename="app/shop/[slug]/opengraph-image.tsx" switcher',filename:'"app/shop/[slug]/opengraph-image.tsx"',switcher:!0},"export default function Image({ params }: { params: { slug: string } }) {\n  // ...\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'filename="app/shop/[slug]/opengraph-image.js" switcher',filename:'"app/shop/[slug]/opengraph-image.js"',switcher:!0},"export default function Image({ params }) {\n  // ...\n}\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Route"),(0,r.kt)("th",{parentName:"tr",align:null},"URL"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"params")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"app/shop/opengraph-image.js")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/shop")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"app/shop/[slug]/opengraph-image.js")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/shop/1")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{ slug: '1' }"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"app/shop/[tag]/[item]/opengraph-image.js")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/shop/1/2")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{ tag: '1', item: '2' }"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"app/shop/[...slug]/opengraph-image.js")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/shop/1/2")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{ slug: ['1', '2'] }"))))),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,"The default export function should return a ",(0,r.kt)("inlineCode",{parentName:"p"},"Blob")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"ArrayBuffer")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"TypedArray")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"DataView")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadableStream")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"Response"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Good to know"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageResponse")," satisfies this return type.")),(0,r.kt)("h3",{id:"config-exports"},"Config exports"),(0,r.kt)("p",null,"You can optionally configure the image's metadata by exporting ",(0,r.kt)("inlineCode",{parentName:"p"},"alt"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"size"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"contentType")," variables from ",(0,r.kt)("inlineCode",{parentName:"p"},"opengraph-image")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter-image")," route."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#alt"},(0,r.kt)("inlineCode",{parentName:"a"},"alt"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#size"},(0,r.kt)("inlineCode",{parentName:"a"},"size"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{ width: number; height: number }"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#contenttype"},(0,r.kt)("inlineCode",{parentName:"a"},"contentType"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")," - ",(0,r.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/MIME_types#image_types"},"image MIME type"))))),(0,r.kt)("h4",{id:"alt"},(0,r.kt)("inlineCode",{parentName:"h4"},"alt")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'filename="opengraph-image.tsx | twitter-image.tsx" switcher',filename:'"opengraph-image.tsx',"|":!0,'twitter-image.tsx"':!0,switcher:!0},"export const alt = 'My images alt text'\n\nexport default function Image() {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'filename="opengraph-image.js | twitter-image.js" switcher',filename:'"opengraph-image.js',"|":!0,'twitter-image.js"':!0,switcher:!0},"export const alt = 'My images alt text'\n\nexport default function Image() {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'filename="<head> output"',filename:'"<head>','output"':!0},'<meta property="og:image:alt" content="My images alt text" />\n')),(0,r.kt)("h4",{id:"size"},(0,r.kt)("inlineCode",{parentName:"h4"},"size")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'filename="opengraph-image.tsx | twitter-image.tsx" switcher',filename:'"opengraph-image.tsx',"|":!0,'twitter-image.tsx"':!0,switcher:!0},"export const size = { width: 1200, height: 630 }\n\nexport default function Image() {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'filename="opengraph-image.js | twitter-image.js" switcher',filename:'"opengraph-image.js',"|":!0,'twitter-image.js"':!0,switcher:!0},"export const size = { width: 1200, height: 630 }\n\nexport default function Image() {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'filename="<head> output"',filename:'"<head>','output"':!0},'<meta property="og:image:width" content="1200" />\n<meta property="og:image:height" content="630" />\n')),(0,r.kt)("h4",{id:"contenttype"},(0,r.kt)("inlineCode",{parentName:"h4"},"contentType")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'filename="opengraph-image.tsx | twitter-image.tsx" switcher',filename:'"opengraph-image.tsx',"|":!0,'twitter-image.tsx"':!0,switcher:!0},"export const contentType = 'image/png'\n\nexport default function Image() {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'filename="opengraph-image.js | twitter-image.js" switcher',filename:'"opengraph-image.js',"|":!0,'twitter-image.js"':!0,switcher:!0},"export const contentType = 'image/png'\n\nexport default function Image() {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'filename="<head> output"',filename:'"<head>','output"':!0},'<meta property="og:image:type" content="image/png" />\n')),(0,r.kt)("h4",{id:"route-segment-config"},"Route Segment Config"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"opengraph-image")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"twitter-image")," are specialized ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/routing/route-handlers"},"Route Handlers")," that can use the same ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/api-reference/file-conventions/route-segment-config"},"route segment configuration")," options as Pages and Layouts."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/app/api-reference/file-conventions/route-segment-config#dynamic"},(0,r.kt)("inlineCode",{parentName:"a"},"dynamic"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'auto' \\| 'force-dynamic' \\| 'error' \\| 'force-static'")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'auto'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/app/api-reference/file-conventions/route-segment-config#revalidate"},(0,r.kt)("inlineCode",{parentName:"a"},"revalidate"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false \\| 'force-cache' \\| 0 \\| number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/app/api-reference/file-conventions/route-segment-config#runtime"},(0,r.kt)("inlineCode",{parentName:"a"},"runtime"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'nodejs' \\| 'edge'")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'nodejs'"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/app/api-reference/file-conventions/route-segment-config#preferredregion"},(0,r.kt)("inlineCode",{parentName:"a"},"preferredRegion"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'auto' \\| 'global' \\| 'home' \\| string \\| string[]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'auto'"))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'filename="app/opengraph-image.tsx" switcher',filename:'"app/opengraph-image.tsx"',switcher:!0},"export const runtime = 'edge'\n\nexport default function Image() {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'filename="app/opengraph-image.js" switcher',filename:'"app/opengraph-image.js"',switcher:!0},"export const runtime = 'edge'\n\nexport default function Image() {}\n")),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("h4",{id:"using-external-data"},"Using external data"),(0,r.kt)("p",null,"This example uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," object and external data to generate the image."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Good to know"),":\nBy default, this generated image will be ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/rendering/server-components#static-rendering-default"},"statically optimized"),". You can configure the individual ",(0,r.kt)("inlineCode",{parentName:"p"},"fetch")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/api-reference/functions/fetch"},(0,r.kt)("inlineCode",{parentName:"a"},"options"))," or route segments ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/api-reference/file-conventions/route-segment-config#revalidate"},"options")," to change this behavior.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'filename="app/posts/[slug]/opengraph-image.tsx" switcher',filename:'"app/posts/[slug]/opengraph-image.tsx"',switcher:!0},"import { ImageResponse } from 'next/og'\n\nexport const runtime = 'edge'\n\nexport const alt = 'About Acme'\nexport const size = {\n  width: 1200,\n  height: 630,\n}\nexport const contentType = 'image/png'\n\nexport default async function Image({ params }: { params: { slug: string } }) {\n  const post = await fetch(`https://.../posts/${params.slug}`).then((res) =>\n    res.json()\n  )\n\n  return new ImageResponse(\n    (\n      <div\n        style={{\n          fontSize: 48,\n          background: 'white',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {post.title}\n      </div>\n    ),\n    {\n      ...size,\n    }\n  )\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'filename="app/posts/[slug]/opengraph-image.js" switcher',filename:'"app/posts/[slug]/opengraph-image.js"',switcher:!0},"import { ImageResponse } from 'next/og'\n\nexport const runtime = 'edge'\n\nexport const alt = 'About Acme'\nexport const size = {\n  width: 1200,\n  height: 630,\n}\nexport const contentType = 'image/png'\n\nexport default async function Image({ params }) {\n  const post = await fetch(`https://.../posts/${params.slug}`).then((res) =>\n    res.json()\n  )\n\n  return new ImageResponse(\n    (\n      <div\n        style={{\n          fontSize: 48,\n          background: 'white',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {post.title}\n      </div>\n    ),\n    {\n      ...size,\n    }\n  )\n}\n")),(0,r.kt)("h2",{id:"version-history"},"Version History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v13.3.0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"opengraph-image")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"twitter-image")," introduced.")))))}d.isMDXComponent=!0}}]);