"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[3694],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=s(a),h=r,m=c["".concat(p,".").concat(h)]||c[h]||u[h]||i;return a?n.createElement(m,l(l({ref:t},d),{},{components:a})):n.createElement(m,l({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=h;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},4653:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={title:"revalidatePath",description:"API Reference for the revalidatePath function."},l=void 0,o={unversionedId:"app/api-reference/functions/revalidatePath",id:"app/api-reference/functions/revalidatePath",title:"revalidatePath",description:"API Reference for the revalidatePath function.",source:"@site/docs/02-app/02-api-reference/04-functions/revalidatePath.mdx",sourceDirName:"02-app/02-api-reference/04-functions",slug:"/app/api-reference/functions/revalidatePath",permalink:"/nano-nextjs-study/docs/app/api-reference/functions/revalidatePath",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-app/02-api-reference/04-functions/revalidatePath.mdx",tags:[],version:"current",frontMatter:{title:"revalidatePath",description:"API Reference for the revalidatePath function."},sidebar:"tutorialSidebar",previous:{title:"redirect",permalink:"/nano-nextjs-study/docs/app/api-reference/functions/redirect"},next:{title:"revalidateTag",permalink:"/nano-nextjs-study/docs/app/api-reference/functions/revalidateTag"}},p={},s=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Examples",id:"examples",level:2},{value:"Revalidating A Specific URL",id:"revalidating-a-specific-url",level:3},{value:"Revalidating A Page Path",id:"revalidating-a-page-path",level:3},{value:"Revalidating A Layout Path",id:"revalidating-a-layout-path",level:3},{value:"Revalidating All Data",id:"revalidating-all-data",level:3},{value:"Server Action",id:"server-action",level:3},{value:"Route Handler",id:"route-handler",level:3}],d={toc:s},c="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"revalidatePath")," allows you to purge ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/caching"},"cached data")," on-demand for a specific path."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Good to know"),":"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"revalidatePath")," is available in both ",(0,r.kt)("a",{parentName:"li",href:"/docs/app/building-your-application/rendering/edge-and-nodejs-runtimes"},"Node.js and Edge runtimes"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"revalidatePath")," only invalidates the cache when the included path is next visited. This means calling ",(0,r.kt)("inlineCode",{parentName:"li"},"revalidatePath")," with a dynamic route segment will not immediately trigger many revalidations at once. The invalidation only happens when the path is next visited."))),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"revalidatePath(path: string, type?: 'page' | 'layout'): void;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"path"),": Either a string representing the filesystem path associated with the data you want to revalidate (for example, ",(0,r.kt)("inlineCode",{parentName:"li"},"/product/[slug]/page"),"), or the literal route segment (for example, ",(0,r.kt)("inlineCode",{parentName:"li"},"/product/123"),"). Must be less than 1024 characters."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),": (optional) ",(0,r.kt)("inlineCode",{parentName:"li"},"'page'")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"'layout'")," string to change the type of path to revalidate.")),(0,r.kt)("h2",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"revalidatePath")," does not return any value."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"revalidating-a-specific-url"},"Revalidating A Specific URL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { revalidatePath } from 'next/cache'\nrevalidatePath('/blog/post-1')\n")),(0,r.kt)("p",null,"This will revalidate one specific URL on the next page visit."),(0,r.kt)("h3",{id:"revalidating-a-page-path"},"Revalidating A Page Path"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { revalidatePath } from 'next/cache'\nrevalidatePath('/blog/[slug]', 'page')\n// or with route groups\nrevalidatePath('/(main)/post/[slug]', 'page')\n")),(0,r.kt)("p",null,"This will revalidate any URL that matches the provided ",(0,r.kt)("inlineCode",{parentName:"p"},"page")," file on the next page visit. This will ",(0,r.kt)("em",{parentName:"p"},"not")," invalidate pages beneath the specific page. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/[slug]")," won't invalidate ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/[slug]/[author]"),"."),(0,r.kt)("h3",{id:"revalidating-a-layout-path"},"Revalidating A Layout Path"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { revalidatePath } from 'next/cache'\nrevalidatePath('/blog/[slug]', 'layout')\n// or with route groups\nrevalidatePath('/(main)/post/[slug]', 'layout')\n")),(0,r.kt)("p",null,"This will revalidate any URL that matches the provided ",(0,r.kt)("inlineCode",{parentName:"p"},"layout")," file on the next page visit. This will cause pages beneath with the same layout to revalidate on the next visit. For example, in the above case, ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/[slug]/[another]")," would also revalidate on the next visit."),(0,r.kt)("h3",{id:"revalidating-all-data"},"Revalidating All Data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { revalidatePath } from 'next/cache'\n\nrevalidatePath('/', 'layout')\n")),(0,r.kt)("p",null,"This will purge the Client-side Router Cache, and revalidate the Data Cache on the next page visit."),(0,r.kt)("h3",{id:"server-action"},"Server Action"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="app/actions.ts" switcher',filename:'"app/actions.ts"',switcher:!0},"'use server'\n\nimport { revalidatePath } from 'next/cache'\n\nexport default async function submit() {\n  await submitForm()\n  revalidatePath('/')\n}\n")),(0,r.kt)("h3",{id:"route-handler"},"Route Handler"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="app/api/revalidate/route.ts" switcher',filename:'"app/api/revalidate/route.ts"',switcher:!0},"import { revalidatePath } from 'next/cache'\nimport { NextRequest } from 'next/server'\n\nexport async function GET(request: NextRequest) {\n  const path = request.nextUrl.searchParams.get('path')\n\n  if (path) {\n    revalidatePath(path)\n    return Response.json({ revalidated: true, now: Date.now() })\n  }\n\n  return Response.json({\n    revalidated: false,\n    now: Date.now(),\n    message: 'Missing path to revalidate',\n  })\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="app/api/revalidate/route.js" switcher',filename:'"app/api/revalidate/route.js"',switcher:!0},"import { revalidatePath } from 'next/cache'\n\nexport async function GET(request) {\n  const path = request.nextUrl.searchParams.get('path')\n\n  if (path) {\n    revalidatePath(path)\n    return Response.json({ revalidated: true, now: Date.now() })\n  }\n\n  return Response.json({\n    revalidated: false,\n    now: Date.now(),\n    message: 'Missing path to revalidate',\n  })\n}\n")))}u.isMDXComponent=!0}}]);