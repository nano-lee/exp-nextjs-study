"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[3573],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=o,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(g,i(i({ref:t},u),{},{components:n})):a.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1465:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:9,title:"Intercepting Routes",description:"Use intercepting routes to load a new route within the current layout while masking the browser URL, useful for advanced routing patterns such as modals.",related:{title:"Next Steps",description:"Learn how to use modals with Intercepted and Parallel Routes.",links:["app/building-your-application/routing/parallel-routes"]}},i=void 0,l={unversionedId:"app/building-your-application/routing/intercepting-routes",id:"app/building-your-application/routing/intercepting-routes",title:"Intercepting Routes",description:"Use intercepting routes to load a new route within the current layout while masking the browser URL, useful for advanced routing patterns such as modals.",source:"@site/docs/02-app/01-building-your-application/01-routing/09-intercepting-routes.mdx",sourceDirName:"02-app/01-building-your-application/01-routing",slug:"/app/building-your-application/routing/intercepting-routes",permalink:"/nano-nextjs-study/docs/app/building-your-application/routing/intercepting-routes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-app/01-building-your-application/01-routing/09-intercepting-routes.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Intercepting Routes",description:"Use intercepting routes to load a new route within the current layout while masking the browser URL, useful for advanced routing patterns such as modals.",related:{title:"Next Steps",description:"Learn how to use modals with Intercepted and Parallel Routes.",links:["app/building-your-application/routing/parallel-routes"]}},sidebar:"tutorialSidebar",previous:{title:"Parallel Routes",permalink:"/nano-nextjs-study/docs/app/building-your-application/routing/parallel-routes"},next:{title:"Route Handlers",permalink:"/nano-nextjs-study/docs/app/building-your-application/routing/route-handlers"}},p={},s=[{value:"Convention",id:"convention",level:2},{value:"Examples",id:"examples",level:2},{value:"Modals",id:"modals",level:3}],u=(c="Image",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var c;const d={toc:s},m="wrapper";function g(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Intercepting routes allows you to load a route from another part of your application within the current layout. This routing paradigm can be useful when you want to display the content of a route without the user switching to a different context."),(0,o.kt)("p",null,"For example, when clicking on a photo in a feed, you can display the photo in a modal, overlaying the feed. In this case, Next.js intercepts the ",(0,o.kt)("inlineCode",{parentName:"p"},"/photo/123")," route, masks the URL, and overlays it over ",(0,o.kt)("inlineCode",{parentName:"p"},"/feed"),"."),(0,o.kt)(u,{alt:"Intercepting routes soft navigation",srcLight:"/docs/light/intercepting-routes-soft-navigate.png",srcDark:"/docs/dark/intercepting-routes-soft-navigate.png",width:"1600",height:"617",mdxType:"Image"}),(0,o.kt)("p",null,"However, when navigating to the photo by clicking a shareable URL or by refreshing the page, the entire photo page should render instead of the modal. No route interception should occur."),(0,o.kt)(u,{alt:"Intercepting routes hard navigation",srcLight:"/docs/light/intercepting-routes-hard-navigate.png",srcDark:"/docs/dark/intercepting-routes-hard-navigate.png",width:"1600",height:"604",mdxType:"Image"}),(0,o.kt)("h2",{id:"convention"},"Convention"),(0,o.kt)("p",null,"Intercepting routes can be defined with the ",(0,o.kt)("inlineCode",{parentName:"p"},"(..)")," convention, which is similar to relative path convention ",(0,o.kt)("inlineCode",{parentName:"p"},"../")," but for segments."),(0,o.kt)("p",null,"You can use:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"(.)")," to match segments on the ",(0,o.kt)("strong",{parentName:"li"},"same level")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"(..)")," to match segments ",(0,o.kt)("strong",{parentName:"li"},"one level above")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"(..)(..)")," to match segments ",(0,o.kt)("strong",{parentName:"li"},"two levels above")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"(...)")," to match segments from the ",(0,o.kt)("strong",{parentName:"li"},"root")," ",(0,o.kt)("inlineCode",{parentName:"li"},"app")," directory")),(0,o.kt)("p",null,"For example, you can intercept the ",(0,o.kt)("inlineCode",{parentName:"p"},"photo")," segment from within the ",(0,o.kt)("inlineCode",{parentName:"p"},"feed")," segment by creating a ",(0,o.kt)("inlineCode",{parentName:"p"},"(..)photo")," directory."),(0,o.kt)(u,{alt:"Intercepting routes folder structure",srcLight:"/docs/light/intercepted-routes-files.png",srcDark:"/docs/dark/intercepted-routes-files.png",width:"1600",height:"604",mdxType:"Image"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note that the ",(0,o.kt)("inlineCode",{parentName:"p"},"(..)")," convention is based on ",(0,o.kt)("em",{parentName:"p"},"route segments"),", not the file-system.")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"modals"},"Modals"),(0,o.kt)("p",null,"Intercepting Routes can be used together with ",(0,o.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/routing/parallel-routes"},"Parallel Routes")," to create modals."),(0,o.kt)("p",null,"Using this pattern to create modals overcomes some common challenges when working with modals, by allowing you to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Make the modal content ",(0,o.kt)("strong",{parentName:"li"},"shareable through a URL")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Preserve context")," when the page is refreshed, instead of closing the modal"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Close the modal on backwards navigation")," rather than going to the previous route"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Reopen the modal on forwards navigation"))),(0,o.kt)(u,{alt:"Intercepting routes modal example",srcLight:"/docs/light/intercepted-routes-modal-example.png",srcDark:"/docs/dark/intercepted-routes-modal-example.png",width:"1600",height:"976",mdxType:"Image"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"In the above example, the path to the ",(0,o.kt)("inlineCode",{parentName:"p"},"photo")," segment can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"(..)")," matcher since ",(0,o.kt)("inlineCode",{parentName:"p"},"@modal")," is a ",(0,o.kt)("em",{parentName:"p"},"slot")," and not a ",(0,o.kt)("em",{parentName:"p"},"segment"),". This means that the ",(0,o.kt)("inlineCode",{parentName:"p"},"photo")," route is only one ",(0,o.kt)("em",{parentName:"p"},"segment")," level higher, despite being two ",(0,o.kt)("em",{parentName:"p"},"file-system")," levels higher.")),(0,o.kt)("p",null,"Other examples could include opening a login modal in a top navbar while also having a dedicated ",(0,o.kt)("inlineCode",{parentName:"p"},"/login")," page, or opening a shopping cart in a side modal."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/vercel-labs/nextgram"},"View an example")," of modals with Intercepted and Parallel Routes."))}g.isMDXComponent=!0}}]);