"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[3803],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,h=m["".concat(l,".").concat(c)]||m[c]||u[c]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3392:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:11,title:"Middleware",description:"Learn how to use Middleware to run code before a request is completed."},o=void 0,s={unversionedId:"app/building-your-application/routing/middleware",id:"app/building-your-application/routing/middleware",title:"Middleware",description:"Learn how to use Middleware to run code before a request is completed.",source:"@site/docs/02-app/01-building-your-application/01-routing/11-middleware.mdx",sourceDirName:"02-app/01-building-your-application/01-routing",slug:"/app/building-your-application/routing/middleware",permalink:"/nano-nextjs-study/docs/app/building-your-application/routing/middleware",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-app/01-building-your-application/01-routing/11-middleware.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,title:"Middleware",description:"Learn how to use Middleware to run code before a request is completed."},sidebar:"tutorialSidebar",previous:{title:"Route Handlers",permalink:"/nano-nextjs-study/docs/app/building-your-application/routing/route-handlers"},next:{title:"Project Organization",permalink:"/nano-nextjs-study/docs/app/building-your-application/routing/colocation"}},l={},d=[{value:"Convention",id:"convention",level:2},{value:"Example",id:"example",level:2},{value:"Matching Paths",id:"matching-paths",level:2},{value:"Matcher",id:"matcher",level:3},{value:"Conditional Statements",id:"conditional-statements",level:3},{value:"NextResponse",id:"nextresponse",level:2},{value:"Using Cookies",id:"using-cookies",level:2},{value:"Setting Headers",id:"setting-headers",level:2},{value:"Producing a Response",id:"producing-a-response",level:2},{value:"Advanced Middleware Flags",id:"advanced-middleware-flags",level:2},{value:"Version History",id:"version-history",level:2}],p={toc:d},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Middleware allows you to run code before a request is completed. Then, based on the incoming request, you can modify the response by rewriting, redirecting, modifying the request or response headers, or responding directly."),(0,r.kt)("p",null,"Middleware runs before cached content and routes are matched. See ",(0,r.kt)("a",{parentName:"p",href:"#matching-paths"},"Matching Paths")," for more details."),(0,r.kt)("h2",{id:"convention"},"Convention"),(0,r.kt)("p",null,"Use the file ",(0,r.kt)("inlineCode",{parentName:"p"},"middleware.ts")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},".js"),") in the root of your project to define Middleware. For example, at the same level as ",(0,r.kt)("inlineCode",{parentName:"p"},"pages")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"app"),", or inside ",(0,r.kt)("inlineCode",{parentName:"p"},"src")," if applicable."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="middleware.ts" switcher',filename:'"middleware.ts"',switcher:!0},'import { NextResponse } from "next/server";\nimport type { NextRequest } from "next/server";\n\n// This function can be marked `async` if using `await` inside\nexport function middleware(request: NextRequest) {\n    return NextResponse.redirect(new URL("/home", request.url));\n}\n\n// See "Matching Paths" below to learn more\nexport const config = {\n    matcher: "/about/:path*",\n};\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js" switcher',filename:'"middleware.js"',switcher:!0},'import { NextResponse } from "next/server";\n\n// This function can be marked `async` if using `await` inside\nexport function middleware(request) {\n    return NextResponse.redirect(new URL("/home", request.url));\n}\n\n// See "Matching Paths" below to learn more\nexport const config = {\n    matcher: "/about/:path*",\n};\n')),(0,r.kt)("h2",{id:"matching-paths"},"Matching Paths"),(0,r.kt)("p",null,"Middleware will be invoked for ",(0,r.kt)("strong",{parentName:"p"},"every route in your project"),". The following is the execution order:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"headers")," from ",(0,r.kt)("inlineCode",{parentName:"li"},"next.config.js")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"redirects")," from ",(0,r.kt)("inlineCode",{parentName:"li"},"next.config.js")),(0,r.kt)("li",{parentName:"ol"},"Middleware (",(0,r.kt)("inlineCode",{parentName:"li"},"rewrites"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"redirects"),", etc.)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"beforeFiles")," (",(0,r.kt)("inlineCode",{parentName:"li"},"rewrites"),") from ",(0,r.kt)("inlineCode",{parentName:"li"},"next.config.js")),(0,r.kt)("li",{parentName:"ol"},"Filesystem routes (",(0,r.kt)("inlineCode",{parentName:"li"},"public/"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"_next/static/"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"pages/"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"app/"),", etc.)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"afterFiles")," (",(0,r.kt)("inlineCode",{parentName:"li"},"rewrites"),") from ",(0,r.kt)("inlineCode",{parentName:"li"},"next.config.js")),(0,r.kt)("li",{parentName:"ol"},"Dynamic Routes (",(0,r.kt)("inlineCode",{parentName:"li"},"/blog/[slug]"),")"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"fallback")," (",(0,r.kt)("inlineCode",{parentName:"li"},"rewrites"),") from ",(0,r.kt)("inlineCode",{parentName:"li"},"next.config.js"))),(0,r.kt)("p",null,"There are two ways to define which paths Middleware will run on:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#matcher"},"Custom matcher config")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#conditional-statements"},"Conditional statements"))),(0,r.kt)("h3",{id:"matcher"},"Matcher"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"matcher")," allows you to filter Middleware to run on specific paths."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js"',filename:'"middleware.js"'},'export const config = {\n    matcher: "/about/:path*",\n};\n')),(0,r.kt)("p",null,"You can match a single path or multiple paths with an array syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js"',filename:'"middleware.js"'},'export const config = {\n    matcher: ["/about/:path*", "/dashboard/:path*"],\n};\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"matcher")," config allows full regex so matching like negative lookaheads or character matching is supported. An example of a negative lookahead to match all except specific paths can be seen here:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js"',filename:'"middleware.js"'},'export const config = {\n    matcher: [\n        /*\n         * Match all request paths except for the ones starting with:\n         * - api (API routes)\n         * - _next/static (static files)\n         * - _next/image (image optimization files)\n         * - favicon.ico (favicon file)\n         */\n        "/((?!api|_next/static|_next/image|favicon.ico).*)",\n    ],\n};\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Good to know"),": The ",(0,r.kt)("inlineCode",{parentName:"p"},"matcher")," values need to be constants so they can be statically analyzed at build-time. Dynamic values such as variables will be ignored.")),(0,r.kt)("p",null,"Configured matchers:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"MUST start with ",(0,r.kt)("inlineCode",{parentName:"li"},"/")),(0,r.kt)("li",{parentName:"ol"},"Can include named parameters: ",(0,r.kt)("inlineCode",{parentName:"li"},"/about/:path")," matches ",(0,r.kt)("inlineCode",{parentName:"li"},"/about/a")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"/about/b")," but not ",(0,r.kt)("inlineCode",{parentName:"li"},"/about/a/c")),(0,r.kt)("li",{parentName:"ol"},"Can have modifiers on named parameters (starting with ",(0,r.kt)("inlineCode",{parentName:"li"},":"),"): ",(0,r.kt)("inlineCode",{parentName:"li"},"/about/:path*")," matches ",(0,r.kt)("inlineCode",{parentName:"li"},"/about/a/b/c")," because ",(0,r.kt)("inlineCode",{parentName:"li"},"*")," is ",(0,r.kt)("em",{parentName:"li"},"zero or more"),". ",(0,r.kt)("inlineCode",{parentName:"li"},"?")," is ",(0,r.kt)("em",{parentName:"li"},"zero or one")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"+")," ",(0,r.kt)("em",{parentName:"li"},"one or more")),(0,r.kt)("li",{parentName:"ol"},"Can use regular expression enclosed in parenthesis: ",(0,r.kt)("inlineCode",{parentName:"li"},"/about/(.*)")," is the same as ",(0,r.kt)("inlineCode",{parentName:"li"},"/about/:path*"))),(0,r.kt)("p",null,"Read more details on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pillarjs/path-to-regexp#path-to-regexp-1"},"path-to-regexp")," documentation."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Good to know"),": For backward compatibility, Next.js always considers ",(0,r.kt)("inlineCode",{parentName:"p"},"/public")," as ",(0,r.kt)("inlineCode",{parentName:"p"},"/public/index"),". Therefore, a matcher of ",(0,r.kt)("inlineCode",{parentName:"p"},"/public/:path")," will match.")),(0,r.kt)("h3",{id:"conditional-statements"},"Conditional Statements"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="middleware.ts" switcher',filename:'"middleware.ts"',switcher:!0},'import { NextResponse } from "next/server";\nimport type { NextRequest } from "next/server";\n\nexport function middleware(request: NextRequest) {\n    if (request.nextUrl.pathname.startsWith("/about")) {\n        return NextResponse.rewrite(new URL("/about-2", request.url));\n    }\n\n    if (request.nextUrl.pathname.startsWith("/dashboard")) {\n        return NextResponse.rewrite(new URL("/dashboard/user", request.url));\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js" switcher',filename:'"middleware.js"',switcher:!0},'import { NextResponse } from "next/server";\n\nexport function middleware(request) {\n    if (request.nextUrl.pathname.startsWith("/about")) {\n        return NextResponse.rewrite(new URL("/about-2", request.url));\n    }\n\n    if (request.nextUrl.pathname.startsWith("/dashboard")) {\n        return NextResponse.rewrite(new URL("/dashboard/user", request.url));\n    }\n}\n')),(0,r.kt)("h2",{id:"nextresponse"},"NextResponse"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"NextResponse")," API allows you to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"redirect")," the incoming request to a different URL"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rewrite")," the response by displaying a given URL"),(0,r.kt)("li",{parentName:"ul"},"Set request headers for API Routes, ",(0,r.kt)("inlineCode",{parentName:"li"},"getServerSideProps"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"rewrite")," destinations"),(0,r.kt)("li",{parentName:"ul"},"Set response cookies"),(0,r.kt)("li",{parentName:"ul"},"Set response headers")),(0,r.kt)("p",null,"To produce a response from Middleware, you can:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"rewrite")," to a route (",(0,r.kt)("a",{parentName:"li",href:"/docs/app/building-your-application/routing/pages-and-layouts"},"Page")," or ",(0,r.kt)("a",{parentName:"li",href:"/docs/app/building-your-application/routing/route-handlers"},"Route Handler"),") that produces a response"),(0,r.kt)("li",{parentName:"ol"},"return a ",(0,r.kt)("inlineCode",{parentName:"li"},"NextResponse")," directly. See ",(0,r.kt)("a",{parentName:"li",href:"#producing-a-response"},"Producing a Response"))),(0,r.kt)("h2",{id:"using-cookies"},"Using Cookies"),(0,r.kt)("p",null,"Cookies are regular headers. On a ",(0,r.kt)("inlineCode",{parentName:"p"},"Request"),", they are stored in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Cookie")," header. On a ",(0,r.kt)("inlineCode",{parentName:"p"},"Response")," they are in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Set-Cookie")," header. Next.js provides a convenient way to access and manipulate these cookies through the ",(0,r.kt)("inlineCode",{parentName:"p"},"cookies")," extension on ",(0,r.kt)("inlineCode",{parentName:"p"},"NextRequest")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"NextResponse"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"For incoming requests, ",(0,r.kt)("inlineCode",{parentName:"li"},"cookies")," comes with the following methods: ",(0,r.kt)("inlineCode",{parentName:"li"},"get"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"getAll"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"set"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"delete")," cookies. You can check for the existence of a cookie with ",(0,r.kt)("inlineCode",{parentName:"li"},"has")," or remove all cookies with ",(0,r.kt)("inlineCode",{parentName:"li"},"clear"),"."),(0,r.kt)("li",{parentName:"ol"},"For outgoing responses, ",(0,r.kt)("inlineCode",{parentName:"li"},"cookies")," have the following methods ",(0,r.kt)("inlineCode",{parentName:"li"},"get"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"getAll"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"set"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"delete"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="middleware.ts" switcher',filename:'"middleware.ts"',switcher:!0},'import { NextResponse } from "next/server";\nimport type { NextRequest } from "next/server";\n\nexport function middleware(request: NextRequest) {\n    // Assume a "Cookie:nextjs=fast" header to be present on the incoming request\n    // Getting cookies from the request using the `RequestCookies` API\n    let cookie = request.cookies.get("nextjs");\n    console.log(cookie); // => { name: \'nextjs\', value: \'fast\', Path: \'/\' }\n    const allCookies = request.cookies.getAll();\n    console.log(allCookies); // => [{ name: \'nextjs\', value: \'fast\' }]\n\n    request.cookies.has("nextjs"); // => true\n    request.cookies.delete("nextjs");\n    request.cookies.has("nextjs"); // => false\n\n    // Setting cookies on the response using the `ResponseCookies` API\n    const response = NextResponse.next();\n    response.cookies.set("vercel", "fast");\n    response.cookies.set({\n        name: "vercel",\n        value: "fast",\n        path: "/",\n    });\n    cookie = response.cookies.get("vercel");\n    console.log(cookie); // => { name: \'vercel\', value: \'fast\', Path: \'/\' }\n    // The outgoing response will have a `Set-Cookie:vercel=fast;path=/test` header.\n\n    return response;\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js" switcher',filename:'"middleware.js"',switcher:!0},'import { NextResponse } from "next/server";\n\nexport function middleware(request) {\n    // Assume a "Cookie:nextjs=fast" header to be present on the incoming request\n    // Getting cookies from the request using the `RequestCookies` API\n    let cookie = request.cookies.get("nextjs");\n    console.log(cookie); // => { name: \'nextjs\', value: \'fast\', Path: \'/\' }\n    const allCookies = request.cookies.getAll();\n    console.log(allCookies); // => [{ name: \'nextjs\', value: \'fast\' }]\n\n    request.cookies.has("nextjs"); // => true\n    request.cookies.delete("nextjs");\n    request.cookies.has("nextjs"); // => false\n\n    // Setting cookies on the response using the `ResponseCookies` API\n    const response = NextResponse.next();\n    response.cookies.set("vercel", "fast");\n    response.cookies.set({\n        name: "vercel",\n        value: "fast",\n        path: "/",\n    });\n    cookie = response.cookies.get("vercel");\n    console.log(cookie); // => { name: \'vercel\', value: \'fast\', Path: \'/\' }\n    // The outgoing response will have a `Set-Cookie:vercel=fast;path=/test` header.\n\n    return response;\n}\n')),(0,r.kt)("h2",{id:"setting-headers"},"Setting Headers"),(0,r.kt)("p",null,"You can set request and response headers using the ",(0,r.kt)("inlineCode",{parentName:"p"},"NextResponse")," API (setting ",(0,r.kt)("em",{parentName:"p"},"request")," headers is available since Next.js v13.0.0)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="middleware.ts" switcher',filename:'"middleware.ts"',switcher:!0},'import { NextResponse } from "next/server";\nimport type { NextRequest } from "next/server";\n\nexport function middleware(request: NextRequest) {\n    // Clone the request headers and set a new header `x-hello-from-middleware1`\n    const requestHeaders = new Headers(request.headers);\n    requestHeaders.set("x-hello-from-middleware1", "hello");\n\n    // You can also set request headers in NextResponse.rewrite\n    const response = NextResponse.next({\n        request: {\n            // New request headers\n            headers: requestHeaders,\n        },\n    });\n\n    // Set a new response header `x-hello-from-middleware2`\n    response.headers.set("x-hello-from-middleware2", "hello");\n    return response;\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js" switcher',filename:'"middleware.js"',switcher:!0},'import { NextResponse } from "next/server";\n\nexport function middleware(request) {\n    // Clone the request headers and set a new header `x-hello-from-middleware1`\n    const requestHeaders = new Headers(request.headers);\n    requestHeaders.set("x-hello-from-middleware1", "hello");\n\n    // You can also set request headers in NextResponse.rewrite\n    const response = NextResponse.next({\n        request: {\n            // New request headers\n            headers: requestHeaders,\n        },\n    });\n\n    // Set a new response header `x-hello-from-middleware2`\n    response.headers.set("x-hello-from-middleware2", "hello");\n    return response;\n}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Good to know"),": Avoid setting large headers as it might cause ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTTP/Status/431"},"431 Request Header Fields Too Large")," error depending on your backend web server configuration.")),(0,r.kt)("h2",{id:"producing-a-response"},"Producing a Response"),(0,r.kt)("p",null,"You can respond from Middleware directly by returning a ",(0,r.kt)("inlineCode",{parentName:"p"},"Response")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"NextResponse")," instance. (This is available since ",(0,r.kt)("a",{parentName:"p",href:"https://nextjs.org/blog/next-13-1#nextjs-advanced-middleware"},"Next.js v13.1.0"),")"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="middleware.ts" switcher',filename:'"middleware.ts"',switcher:!0},'import { NextRequest } from "next/server";\nimport { isAuthenticated } from "@lib/auth";\n\n// Limit the middleware to paths starting with `/api/`\nexport const config = {\n    matcher: "/api/:function*",\n};\n\nexport function middleware(request: NextRequest) {\n    // Call our authentication function to check the request\n    if (!isAuthenticated(request)) {\n        // Respond with JSON indicating an error message\n        return Response.json(\n            { success: false, message: "authentication failed" },\n            { status: 401 },\n        );\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js" switcher',filename:'"middleware.js"',switcher:!0},'import { isAuthenticated } from "@lib/auth";\n\n// Limit the middleware to paths starting with `/api/`\nexport const config = {\n    matcher: "/api/:function*",\n};\n\nexport function middleware(request) {\n    // Call our authentication function to check the request\n    if (!isAuthenticated(request)) {\n        // Respond with JSON indicating an error message\n        return Response.json(\n            { success: false, message: "authentication failed" },\n            { status: 401 },\n        );\n    }\n}\n')),(0,r.kt)("h2",{id:"advanced-middleware-flags"},"Advanced Middleware Flags"),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"v13.1")," of Next.js two additional flags were introduced for middleware, ",(0,r.kt)("inlineCode",{parentName:"p"},"skipMiddlewareUrlNormalize")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"skipTrailingSlashRedirect")," to handle advanced use cases."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"skipTrailingSlashRedirect")," allows disabling Next.js default redirects for adding or removing trailing slashes allowing custom handling inside middleware which can allow maintaining the trailing slash for some paths but not others allowing easier incremental migrations."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},"module.exports = {\n    skipTrailingSlashRedirect: true,\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js"',filename:'"middleware.js"'},'const legacyPrefixes = ["/docs", "/blog"];\n\nexport default async function middleware(req) {\n    const { pathname } = req.nextUrl;\n\n    if (legacyPrefixes.some((prefix) => pathname.startsWith(prefix))) {\n        return NextResponse.next();\n    }\n\n    // apply trailing slash handling\n    if (\n        !pathname.endsWith("/") &&\n        !pathname.match(/((?!\\.well-known(?:\\/.*)?)(?:[^/]+\\/)*[^/]+\\.\\w+)/)\n    ) {\n        req.nextUrl.pathname += "/";\n        return NextResponse.redirect(req.nextUrl);\n    }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"skipMiddlewareUrlNormalize")," allows disabling the URL normalizing Next.js does to make handling direct visits and client-transitions the same. There are some advanced cases where you need full control using the original URL which this unlocks."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},"module.exports = {\n    skipMiddlewareUrlNormalize: true,\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="middleware.js"',filename:'"middleware.js"'},"export default async function middleware(req) {\n    const { pathname } = req.nextUrl;\n\n    // GET /_next/data/build-id/hello.json\n\n    console.log(pathname);\n    // with the flag this now /_next/data/build-id/hello.json\n    // without the flag this would be normalized to /hello\n}\n")),(0,r.kt)("h2",{id:"version-history"},"Version History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v13.1.0")),(0,r.kt)("td",{parentName:"tr",align:null},"Advanced Middleware flags added")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v13.0.0")),(0,r.kt)("td",{parentName:"tr",align:null},"Middleware can modify request headers, response headers, and send responses")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v12.2.0")),(0,r.kt)("td",{parentName:"tr",align:null},"Middleware is stable, please see the ",(0,r.kt)("a",{parentName:"td",href:"/docs/messages/middleware-upgrade-guide"},"upgrade guide"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v12.0.9")),(0,r.kt)("td",{parentName:"tr",align:null},"Enforce absolute URLs in Edge Runtime (",(0,r.kt)("a",{parentName:"td",href:"https://github.com/vercel/next.js/pull/33410"},"PR"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v12.0.0")),(0,r.kt)("td",{parentName:"tr",align:null},"Middleware (Beta) added")))))}u.isMDXComponent=!0}}]);