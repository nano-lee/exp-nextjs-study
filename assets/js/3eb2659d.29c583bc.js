"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[4391],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},382:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={title:"output",description:"Next.js automatically traces which files are needed by each page to allow for easy deployment of your application. Learn how it works here."},o=void 0,l={unversionedId:"app/api-reference/next-config-js/output",id:"app/api-reference/next-config-js/output",title:"output",description:"Next.js automatically traces which files are needed by each page to allow for easy deployment of your application. Learn how it works here.",source:"@site/docs/02-app/02-api-reference/05-next-config-js/output.mdx",sourceDirName:"02-app/02-api-reference/05-next-config-js",slug:"/app/api-reference/next-config-js/output",permalink:"/docs/app/api-reference/next-config-js/output",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-app/02-api-reference/05-next-config-js/output.mdx",tags:[],version:"current",frontMatter:{title:"output",description:"Next.js automatically traces which files are needed by each page to allow for easy deployment of your application. Learn how it works here."},sidebar:"tutorialSidebar",previous:{title:"optimizePackageImports",permalink:"/docs/app/api-reference/next-config-js/optimizePackageImports"},next:{title:"pageExtensions",permalink:"/docs/app/api-reference/next-config-js/pageExtensions"}},s={},p=[{value:"How it Works",id:"how-it-works",level:2},{value:"Automatically Copying Traced Files",id:"automatically-copying-traced-files",level:2},{value:"Caveats",id:"caveats",level:2},{value:"Experimental <code>turbotrace</code>",id:"experimental-turbotrace",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"{/",(0,i.kt)("em",{parentName:"p"}," The content of this doc is shared between the app and pages router. You can use the  component to add content that is specific to the Pages Router. Any shared content should not be wrapped in a component. "),"/}"),(0,i.kt)("p",null,"During a build, Next.js will automatically trace each page and its dependencies to determine all of the files that are needed for deploying a production version of your application."),(0,i.kt)("p",null,"This feature helps reduce the size of deployments drastically. Previously, when deploying with Docker you would need to have all files from your package's ",(0,i.kt)("inlineCode",{parentName:"p"},"dependencies")," installed to run ",(0,i.kt)("inlineCode",{parentName:"p"},"next start"),". Starting with Next.js 12, you can leverage Output File Tracing in the ",(0,i.kt)("inlineCode",{parentName:"p"},".next/")," directory to only include the necessary files."),(0,i.kt)("p",null,"Furthermore, this removes the need for the deprecated ",(0,i.kt)("inlineCode",{parentName:"p"},"serverless")," target which can cause various issues and also creates unnecessary duplication."),(0,i.kt)("h2",{id:"how-it-works"},"How it Works"),(0,i.kt)("p",null,"During ",(0,i.kt)("inlineCode",{parentName:"p"},"next build"),", Next.js will use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/vercel/nft"},(0,i.kt)("inlineCode",{parentName:"a"},"@vercel/nft"))," to statically analyze ",(0,i.kt)("inlineCode",{parentName:"p"},"import"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"require"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"fs")," usage to determine all files that a page might load."),(0,i.kt)("p",null,"Next.js' production server is also traced for its needed files and output at ",(0,i.kt)("inlineCode",{parentName:"p"},".next/next-server.js.nft.json")," which can be leveraged in production."),(0,i.kt)("p",null,"To leverage the ",(0,i.kt)("inlineCode",{parentName:"p"},".nft.json")," files emitted to the ",(0,i.kt)("inlineCode",{parentName:"p"},".next")," output directory, you can read the list of files in each trace that are relative to the ",(0,i.kt)("inlineCode",{parentName:"p"},".nft.json")," file and then copy them to your deployment location."),(0,i.kt)("h2",{id:"automatically-copying-traced-files"},"Automatically Copying Traced Files"),(0,i.kt)("p",null,"Next.js can automatically create a ",(0,i.kt)("inlineCode",{parentName:"p"},"standalone")," folder that copies only the necessary files for a production deployment including select files in ",(0,i.kt)("inlineCode",{parentName:"p"},"node_modules"),"."),(0,i.kt)("p",null,"To leverage this automatic copying you can enable it in your ",(0,i.kt)("inlineCode",{parentName:"p"},"next.config.js"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    output: "standalone",\n};\n')),(0,i.kt)("p",null,"This will create a folder at ",(0,i.kt)("inlineCode",{parentName:"p"},".next/standalone")," which can then be deployed on its own without installing ",(0,i.kt)("inlineCode",{parentName:"p"},"node_modules"),"."),(0,i.kt)("p",null,"Additionally, a minimal ",(0,i.kt)("inlineCode",{parentName:"p"},"server.js")," file is also output which can be used instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"next start"),". This minimal server does not copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"public")," or ",(0,i.kt)("inlineCode",{parentName:"p"},".next/static")," folders by default as these should ideally be handled by a CDN instead, although these folders can be copied to the ",(0,i.kt)("inlineCode",{parentName:"p"},"standalone/public")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"standalone/.next/static")," folders manually, after which ",(0,i.kt)("inlineCode",{parentName:"p"},"server.js")," file will serve these automatically."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Good to know"),":"),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},"If your project needs to listen to a specific port or hostname, you can define ",(0,i.kt)("inlineCode",{parentName:"li"},"PORT")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"HOSTNAME")," environment variables before running ",(0,i.kt)("inlineCode",{parentName:"li"},"server.js"),". For example, run ",(0,i.kt)("inlineCode",{parentName:"li"},"PORT=8080 HOSTNAME=0.0.0.0 node server.js")," to start the server on ",(0,i.kt)("inlineCode",{parentName:"li"},"http://0.0.0.0:8080"),"."),(0,i.kt)("li",{parentName:"ul"},"If your project uses ",(0,i.kt)("a",{parentName:"li",href:"/docs/app/building-your-application/optimizing/images"},"Image Optimization")," with the default ",(0,i.kt)("inlineCode",{parentName:"li"},"loader"),", you must install ",(0,i.kt)("inlineCode",{parentName:"li"},"sharp")," as a dependency:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'filename="Terminal"',filename:'"Terminal"'},"npm i sharp\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'filename="Terminal"',filename:'"Terminal"'},"yarn add sharp\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'filename="Terminal"',filename:'"Terminal"'},"pnpm add sharp\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'filename="Terminal"',filename:'"Terminal"'},"bun add sharp\n")),(0,i.kt)("h2",{id:"caveats"},"Caveats"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"While tracing in monorepo setups, the project directory is used for tracing by default. For ",(0,i.kt)("inlineCode",{parentName:"li"},"next build packages/web-app"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"packages/web-app")," would be the tracing root and any files outside of that folder will not be included. To include files outside of this folder you can set ",(0,i.kt)("inlineCode",{parentName:"li"},"experimental.outputFileTracingRoot")," in your ",(0,i.kt)("inlineCode",{parentName:"li"},"next.config.js"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="packages/web-app/next.config.js"',filename:'"packages/web-app/next.config.js"'},'module.exports = {\n    experimental: {\n        // this includes files from the monorepo base two directories up\n        outputFileTracingRoot: path.join(__dirname, "../../"),\n    },\n};\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"There are some cases in which Next.js might fail to include required files, or might incorrectly include unused files. In those cases, you can leverage ",(0,i.kt)("inlineCode",{parentName:"li"},"experimental.outputFileTracingExcludes")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"experimental.outputFileTracingIncludes")," respectively in ",(0,i.kt)("inlineCode",{parentName:"li"},"next.config.js"),". Each config accepts an object with ",(0,i.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/minimatch"},"minimatch globs")," for the key to match specific pages and a value of an array with globs relative to the project's root to either include or exclude in the trace.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    experimental: {\n        outputFileTracingExcludes: {\n            "/api/hello": ["./un-necessary-folder/**/*"],\n        },\n        outputFileTracingIncludes: {\n            "/api/another": ["./necessary-folder/**/*"],\n        },\n    },\n};\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Currently, Next.js does not do anything with the emitted ",(0,i.kt)("inlineCode",{parentName:"li"},".nft.json")," files. The files must be read by your deployment platform, for example ",(0,i.kt)("a",{parentName:"li",href:"https://vercel.com"},"Vercel"),", to create a minimal deployment. In a future release, a new command is planned to utilize these ",(0,i.kt)("inlineCode",{parentName:"li"},".nft.json")," files.")),(0,i.kt)("h2",{id:"experimental-turbotrace"},"Experimental ",(0,i.kt)("inlineCode",{parentName:"h2"},"turbotrace")),(0,i.kt)("p",null,"Tracing dependencies can be slow because it requires very complex computations and analysis. We created ",(0,i.kt)("inlineCode",{parentName:"p"},"turbotrace")," in Rust as a faster and smarter alternative to the JavaScript implementation."),(0,i.kt)("p",null,"To enable it, you can add the following configuration to your ",(0,i.kt)("inlineCode",{parentName:"p"},"next.config.js"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},"module.exports = {\n  experimental: {\n    turbotrace: {\n      // control the log level of the turbotrace, default is `error`\n      logLevel?:\n      | 'bug'\n      | 'fatal'\n      | 'error'\n      | 'warning'\n      | 'hint'\n      | 'note'\n      | 'suggestions'\n      | 'info',\n      // control if the log of turbotrace should contain the details of the analysis, default is `false`\n      logDetail?: boolean\n      // show all log messages without limit\n      // turbotrace only show 1 log message for each categories by default\n      logAll?: boolean\n      // control the context directory of the turbotrace\n      // files outside of the context directory will not be traced\n      // set the `experimental.outputFileTracingRoot` has the same effect\n      // if the `experimental.outputFileTracingRoot` and this option are both set, the `experimental.turbotrace.contextDirectory` will be used\n      contextDirectory?: string\n      // if there is `process.cwd()` expression in your code, you can set this option to tell `turbotrace` the value of `process.cwd()` while tracing.\n      // for example the require(process.cwd() + '/package.json') will be traced as require('/path/to/cwd/package.json')\n      processCwd?: string\n      // control the maximum memory usage of the `turbotrace`, in `MB`, default is `6000`.\n      memoryLimit?: number\n    },\n  },\n}\n")))}d.isMDXComponent=!0}}]);