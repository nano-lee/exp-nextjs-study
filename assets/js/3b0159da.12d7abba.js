"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[3800],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,g=u["".concat(p,".").concat(d)]||u[d]||f[d]||a;return n?r.createElement(g,i(i({ref:t},l),{},{components:n})):r.createElement(g,i({ref:t},l))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},18:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={title:"pageExtensions",description:"Extend the default page extensions used by Next.js when resolving pages in the Pages Router."},i=void 0,s={unversionedId:"app/api-reference/next-config-js/pageExtensions",id:"app/api-reference/next-config-js/pageExtensions",title:"pageExtensions",description:"Extend the default page extensions used by Next.js when resolving pages in the Pages Router.",source:"@site/docs/02-app/02-api-reference/05-next-config-js/pageExtensions.mdx",sourceDirName:"02-app/02-api-reference/05-next-config-js",slug:"/app/api-reference/next-config-js/pageExtensions",permalink:"/docs/app/api-reference/next-config-js/pageExtensions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-app/02-api-reference/05-next-config-js/pageExtensions.mdx",tags:[],version:"current",frontMatter:{title:"pageExtensions",description:"Extend the default page extensions used by Next.js when resolving pages in the Pages Router."},sidebar:"nextJsSidebar",previous:{title:"output",permalink:"/docs/app/api-reference/next-config-js/output"},next:{title:"poweredByHeader",permalink:"/docs/app/api-reference/next-config-js/poweredByHeader"}},p={},c=[],l={toc:c},u="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"{/",(0,o.kt)("em",{parentName:"p"}," The content of this doc is shared between the app and pages router. You can use the  component to add content that is specific to the Pages Router. Any shared content should not be wrapped in a component. "),"/}"),(0,o.kt)("p",null,"By default, Next.js accepts files with the following extensions: ",(0,o.kt)("inlineCode",{parentName:"p"},".tsx"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".ts"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".jsx"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".js"),". This can be modified to allow other extensions like markdown (",(0,o.kt)("inlineCode",{parentName:"p"},".md"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".mdx"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'const withMDX = require("@next/mdx")();\n\n/** @type {import(\'next\').NextConfig} */\nconst nextConfig = {\n    pageExtensions: ["ts", "tsx", "mdx"],\n    experimental: {\n        mdxRs: true,\n    },\n};\n\nmodule.exports = withMDX(nextConfig);\n')))}f.isMDXComponent=!0}}]);