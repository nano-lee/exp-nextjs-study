"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[9629],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},h="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),h=p(t),u=r,m=h["".concat(s,".").concat(u)]||h[u]||c[u]||i;return t?a.createElement(m,l(l({ref:n},d),{},{components:t})):a.createElement(m,l({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[h]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2478:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={title:"headers",description:"Add custom HTTP headers to your Next.js app."},l=void 0,o={unversionedId:"app/api-reference/next-config-js/headers",id:"app/api-reference/next-config-js/headers",title:"headers",description:"Add custom HTTP headers to your Next.js app.",source:"@site/docs/02-app/02-api-reference/05-next-config-js/headers.mdx",sourceDirName:"02-app/02-api-reference/05-next-config-js",slug:"/app/api-reference/next-config-js/headers",permalink:"/docs/app/api-reference/next-config-js/headers",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-app/02-api-reference/05-next-config-js/headers.mdx",tags:[],version:"current",frontMatter:{title:"headers",description:"Add custom HTTP headers to your Next.js app."},sidebar:"nextJsSidebar",previous:{title:"generateEtags",permalink:"/docs/app/api-reference/next-config-js/generateEtags"},next:{title:"httpAgentOptions",permalink:"/docs/app/api-reference/next-config-js/httpAgentOptions"}},s={},p=[{value:"Header Overriding Behavior",id:"header-overriding-behavior",level:2},{value:"Path Matching",id:"path-matching",level:2},{value:"Wildcard Path Matching",id:"wildcard-path-matching",level:3},{value:"Regex Path Matching",id:"regex-path-matching",level:3},{value:"Header, Cookie, and Query Matching",id:"header-cookie-and-query-matching",level:2},{value:"Headers with basePath support",id:"headers-with-basepath-support",level:2},{value:"Headers with i18n support",id:"headers-with-i18n-support",level:2},{value:"Cache-Control",id:"cache-control",level:2},{value:"Options",id:"options",level:2},{value:"X-DNS-Prefetch-Control",id:"x-dns-prefetch-control",level:3},{value:"Strict-Transport-Security",id:"strict-transport-security",level:3},{value:"X-Frame-Options",id:"x-frame-options",level:3},{value:"Permissions-Policy",id:"permissions-policy",level:3},{value:"X-Content-Type-Options",id:"x-content-type-options",level:3},{value:"Referrer-Policy",id:"referrer-policy",level:3},{value:"Content-Security-Policy",id:"content-security-policy",level:3},{value:"Version History",id:"version-history",level:2}],d={toc:p},h="wrapper";function c(e){let{components:n,...t}=e;return(0,r.kt)(h,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"{/",(0,r.kt)("em",{parentName:"p"}," The content of this doc is shared between the app and pages router. You can use the  component to add content that is specific to the Pages Router. Any shared content should not be wrapped in a component. "),"/}"),(0,r.kt)("p",null,"Headers allow you to set custom HTTP headers on the response to an incoming request on a given path."),(0,r.kt)("p",null,"To set custom HTTP headers you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"headers")," key in ",(0,r.kt)("inlineCode",{parentName:"p"},"next.config.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    async headers() {\n        return [\n            {\n                source: "/about",\n                headers: [\n                    {\n                        key: "x-custom-header",\n                        value: "my custom header value",\n                    },\n                    {\n                        key: "x-another-custom-header",\n                        value: "my other custom header value",\n                    },\n                ],\n            },\n        ];\n    },\n};\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"headers")," is an async function that expects an array to be returned holding objects with ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"headers")," properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"source")," is the incoming request path pattern."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"headers")," is an array of response header objects, with ",(0,r.kt)("inlineCode",{parentName:"li"},"key")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"value")," properties."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"basePath"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," - if false the basePath won't be included when matching, can be used for external rewrites only."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"locale"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," - whether the locale should not be included when matching."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"has")," is an array of ",(0,r.kt)("a",{parentName:"li",href:"#header-cookie-and-query-matching"},"has objects")," with the ",(0,r.kt)("inlineCode",{parentName:"li"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"key")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"value")," properties."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"missing")," is an array of ",(0,r.kt)("a",{parentName:"li",href:"#header-cookie-and-query-matching"},"missing objects")," with the ",(0,r.kt)("inlineCode",{parentName:"li"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"key")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"value")," properties.")),(0,r.kt)("p",null,"Headers are checked before the filesystem which includes pages and ",(0,r.kt)("inlineCode",{parentName:"p"},"/public")," files."),(0,r.kt)("h2",{id:"header-overriding-behavior"},"Header Overriding Behavior"),(0,r.kt)("p",null,"If two headers match the same path and set the same header key, the last header key will override the first. Using the below headers, the path ",(0,r.kt)("inlineCode",{parentName:"p"},"/hello")," will result in the header ",(0,r.kt)("inlineCode",{parentName:"p"},"x-hello")," being ",(0,r.kt)("inlineCode",{parentName:"p"},"world")," due to the last header value set being ",(0,r.kt)("inlineCode",{parentName:"p"},"world"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    async headers() {\n        return [\n            {\n                source: "/:path*",\n                headers: [\n                    {\n                        key: "x-hello",\n                        value: "there",\n                    },\n                ],\n            },\n            {\n                source: "/hello",\n                headers: [\n                    {\n                        key: "x-hello",\n                        value: "world",\n                    },\n                ],\n            },\n        ];\n    },\n};\n')),(0,r.kt)("h2",{id:"path-matching"},"Path Matching"),(0,r.kt)("p",null,"Path matches are allowed, for example ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/:slug")," will match ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/hello-world")," (no nested paths):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    async headers() {\n        return [\n            {\n                source: "/blog/:slug",\n                headers: [\n                    {\n                        key: "x-slug",\n                        value: ":slug", // Matched parameters can be used in the value\n                    },\n                    {\n                        key: "x-slug-:slug", // Matched parameters can be used in the key\n                        value: "my other custom header value",\n                    },\n                ],\n            },\n        ];\n    },\n};\n')),(0,r.kt)("h3",{id:"wildcard-path-matching"},"Wildcard Path Matching"),(0,r.kt)("p",null,"To match a wildcard path you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," after a parameter, for example ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/:slug*")," will match ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/a/b/c/d/hello-world"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    async headers() {\n        return [\n            {\n                source: "/blog/:slug*",\n                headers: [\n                    {\n                        key: "x-slug",\n                        value: ":slug*", // Matched parameters can be used in the value\n                    },\n                    {\n                        key: "x-slug-:slug*", // Matched parameters can be used in the key\n                        value: "my other custom header value",\n                    },\n                ],\n            },\n        ];\n    },\n};\n')),(0,r.kt)("h3",{id:"regex-path-matching"},"Regex Path Matching"),(0,r.kt)("p",null,"To match a regex path you can wrap the regex in parenthesis after a parameter, for example ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/:slug(\\\\d{1,})")," will match ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/123")," but not ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/abc"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    async headers() {\n        return [\n            {\n                source: "/blog/:post(\\\\d{1,})",\n                headers: [\n                    {\n                        key: "x-post",\n                        value: ":post",\n                    },\n                ],\n            },\n        ];\n    },\n};\n')),(0,r.kt)("p",null,"The following characters ",(0,r.kt)("inlineCode",{parentName:"p"},"("),", ",(0,r.kt)("inlineCode",{parentName:"p"},")"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"{"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"}"),", ",(0,r.kt)("inlineCode",{parentName:"p"},":"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"*"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"+"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"?")," are used for regex path matching, so when used in the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," as non-special values they must be escaped by adding ",(0,r.kt)("inlineCode",{parentName:"p"},"\\\\")," before them:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    async headers() {\n        return [\n            {\n                // this will match `/english(default)/something` being requested\n                source: "/english\\\\(default\\\\)/:slug",\n                headers: [\n                    {\n                        key: "x-header",\n                        value: "value",\n                    },\n                ],\n            },\n        ];\n    },\n};\n')),(0,r.kt)("h2",{id:"header-cookie-and-query-matching"},"Header, Cookie, and Query Matching"),(0,r.kt)("p",null,"To only apply a header when header, cookie, or query values also match the ",(0,r.kt)("inlineCode",{parentName:"p"},"has")," field or don't match the ",(0,r.kt)("inlineCode",{parentName:"p"},"missing")," field can be used. Both the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," and all ",(0,r.kt)("inlineCode",{parentName:"p"},"has")," items must match and all ",(0,r.kt)("inlineCode",{parentName:"p"},"missing")," items must not match for the header to be applied."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"has")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"missing")," items can have the following fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"String")," - must be either ",(0,r.kt)("inlineCode",{parentName:"li"},"header"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"cookie"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"host"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"query"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"String")," - the key from the selected type to match against."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"String")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," - the value to check for, if undefined any value will match. A regex like string can be used to capture a specific part of the value, e.g. if the value ",(0,r.kt)("inlineCode",{parentName:"li"},"first-(?<paramName>.*)")," is used for ",(0,r.kt)("inlineCode",{parentName:"li"},"first-second")," then ",(0,r.kt)("inlineCode",{parentName:"li"},"second")," will be usable in the destination with ",(0,r.kt)("inlineCode",{parentName:"li"},":paramName"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    async headers() {\n        return [\n            // if the header `x-add-header` is present,\n            // the `x-another-header` header will be applied\n            {\n                source: "/:path*",\n                has: [\n                    {\n                        type: "header",\n                        key: "x-add-header",\n                    },\n                ],\n                headers: [\n                    {\n                        key: "x-another-header",\n                        value: "hello",\n                    },\n                ],\n            },\n            // if the header `x-no-header` is not present,\n            // the `x-another-header` header will be applied\n            {\n                source: "/:path*",\n                missing: [\n                    {\n                        type: "header",\n                        key: "x-no-header",\n                    },\n                ],\n                headers: [\n                    {\n                        key: "x-another-header",\n                        value: "hello",\n                    },\n                ],\n            },\n            // if the source, query, and cookie are matched,\n            // the `x-authorized` header will be applied\n            {\n                source: "/specific/:path*",\n                has: [\n                    {\n                        type: "query",\n                        key: "page",\n                        // the page value will not be available in the\n                        // header key/values since value is provided and\n                        // doesn\'t use a named capture group e.g. (?<page>home)\n                        value: "home",\n                    },\n                    {\n                        type: "cookie",\n                        key: "authorized",\n                        value: "true",\n                    },\n                ],\n                headers: [\n                    {\n                        key: "x-authorized",\n                        value: ":authorized",\n                    },\n                ],\n            },\n            // if the header `x-authorized` is present and\n            // contains a matching value, the `x-another-header` will be applied\n            {\n                source: "/:path*",\n                has: [\n                    {\n                        type: "header",\n                        key: "x-authorized",\n                        value: "(?<authorized>yes|true)",\n                    },\n                ],\n                headers: [\n                    {\n                        key: "x-another-header",\n                        value: ":authorized",\n                    },\n                ],\n            },\n            // if the host is `example.com`,\n            // this header will be applied\n            {\n                source: "/:path*",\n                has: [\n                    {\n                        type: "host",\n                        value: "example.com",\n                    },\n                ],\n                headers: [\n                    {\n                        key: "x-another-header",\n                        value: ":authorized",\n                    },\n                ],\n            },\n        ];\n    },\n};\n')),(0,r.kt)("h2",{id:"headers-with-basepath-support"},"Headers with basePath support"),(0,r.kt)("p",null,"When leveraging ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/api-reference/next-config-js/basePath"},(0,r.kt)("inlineCode",{parentName:"a"},"basePath")," support")," with headers each ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," is automatically prefixed with the ",(0,r.kt)("inlineCode",{parentName:"p"},"basePath")," unless you add ",(0,r.kt)("inlineCode",{parentName:"p"},"basePath: false")," to the header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    basePath: "/docs",\n\n    async headers() {\n        return [\n            {\n                source: "/with-basePath", // becomes /docs/with-basePath\n                headers: [\n                    {\n                        key: "x-hello",\n                        value: "world",\n                    },\n                ],\n            },\n            {\n                source: "/without-basePath", // is not modified since basePath: false is set\n                headers: [\n                    {\n                        key: "x-hello",\n                        value: "world",\n                    },\n                ],\n                basePath: false,\n            },\n        ];\n    },\n};\n')),(0,r.kt)("h2",{id:"headers-with-i18n-support"},"Headers with i18n support"),(0,r.kt)("p",null,"When leveraging ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/routing/internationalization"},(0,r.kt)("inlineCode",{parentName:"a"},"i18n")," support")," with headers each ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," is automatically prefixed to handle the configured ",(0,r.kt)("inlineCode",{parentName:"p"},"locales")," unless you add ",(0,r.kt)("inlineCode",{parentName:"p"},"locale: false")," to the header. If ",(0,r.kt)("inlineCode",{parentName:"p"},"locale: false")," is used you must prefix the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," with a locale for it to be matched correctly."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    i18n: {\n        locales: ["en", "fr", "de"],\n        defaultLocale: "en",\n    },\n\n    async headers() {\n        return [\n            {\n                source: "/with-locale", // automatically handles all locales\n                headers: [\n                    {\n                        key: "x-hello",\n                        value: "world",\n                    },\n                ],\n            },\n            {\n                // does not handle locales automatically since locale: false is set\n                source: "/nl/with-locale-manual",\n                locale: false,\n                headers: [\n                    {\n                        key: "x-hello",\n                        value: "world",\n                    },\n                ],\n            },\n            {\n                // this matches \'/\' since `en` is the defaultLocale\n                source: "/en",\n                locale: false,\n                headers: [\n                    {\n                        key: "x-hello",\n                        value: "world",\n                    },\n                ],\n            },\n            {\n                // this gets converted to /(en|fr|de)/(.*) so will not match the top-level\n                // `/` or `/fr` routes like /:path* would\n                source: "/(.*)",\n                headers: [\n                    {\n                        key: "x-hello",\n                        value: "world",\n                    },\n                ],\n            },\n        ];\n    },\n};\n')),(0,r.kt)("h2",{id:"cache-control"},"Cache-Control"),(0,r.kt)("p",null,"You cannot set ",(0,r.kt)("inlineCode",{parentName:"p"},"Cache-Control")," headers in ",(0,r.kt)("inlineCode",{parentName:"p"},"next.config.js")," for pages or assets, as these headers will be overwritten in production to ensure that responses and static assets are cached effectively."),(0,r.kt)("p",null,"Learn more about ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/caching"},"caching")," with the App Router."),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("h3",{id:"x-dns-prefetch-control"},"X-DNS-Prefetch-Control"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTTP/Headers/X-DNS-Prefetch-Control"},"This header")," controls DNS prefetching, allowing browsers to proactively perform domain name resolution on external links, images, CSS, JavaScript, and more. This prefetching is performed in the background, so the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Glossary/DNS"},"DNS")," is more likely to be resolved by the time the referenced items are needed. This reduces latency when the user clicks a link."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  key: 'X-DNS-Prefetch-Control',\n  value: 'on'\n}\n")),(0,r.kt)("h3",{id:"strict-transport-security"},"Strict-Transport-Security"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTTP/Headers/Strict-Transport-Security"},"This header")," informs browsers it should only be accessed using HTTPS, instead of using HTTP. Using the configuration below, all present and future subdomains will use HTTPS for a ",(0,r.kt)("inlineCode",{parentName:"p"},"max-age")," of 2 years. This blocks access to pages or subdomains that can only be served over HTTP."),(0,r.kt)("p",null,"If you're deploying to ",(0,r.kt)("a",{parentName:"p",href:"https://vercel.com/docs/concepts/edge-network/headers#strict-transport-security?utm_source=next-site&utm_medium=docs&utm_campaign=next-website"},"Vercel"),", this header is not necessary as it's automatically added to all deployments unless you declare ",(0,r.kt)("inlineCode",{parentName:"p"},"headers")," in your ",(0,r.kt)("inlineCode",{parentName:"p"},"next.config.js"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  key: 'Strict-Transport-Security',\n  value: 'max-age=63072000; includeSubDomains; preload'\n}\n")),(0,r.kt)("h3",{id:"x-frame-options"},"X-Frame-Options"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTTP/Headers/X-Frame-Options"},"This header")," indicates whether the site should be allowed to be displayed within an ",(0,r.kt)("inlineCode",{parentName:"p"},"iframe"),". This can prevent against clickjacking attacks."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This header has been superseded by CSP's ",(0,r.kt)("inlineCode",{parentName:"strong"},"frame-ancestors")," option"),", which has better support in modern browsers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  key: 'X-Frame-Options',\n  value: 'SAMEORIGIN'\n}\n")),(0,r.kt)("h3",{id:"permissions-policy"},"Permissions-Policy"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTTP/Headers/Permissions-Policy"},"This header")," allows you to control which features and APIs can be used in the browser. It was previously named ",(0,r.kt)("inlineCode",{parentName:"p"},"Feature-Policy"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  key: 'Permissions-Policy',\n  value: 'camera=(), microphone=(), geolocation=(), browsing-topics=()'\n}\n")),(0,r.kt)("h3",{id:"x-content-type-options"},"X-Content-Type-Options"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTTP/Headers/X-Content-Type-Options"},"This header")," prevents the browser from attempting to guess the type of content if the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," header is not explicitly set. This can prevent XSS exploits for websites that allow users to upload and share files."),(0,r.kt)("p",null,"For example, a user trying to download an image, but having it treated as a different ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," like an executable, which could be malicious. This header also applies to downloading browser extensions. The only valid value for this header is ",(0,r.kt)("inlineCode",{parentName:"p"},"nosniff"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  key: 'X-Content-Type-Options',\n  value: 'nosniff'\n}\n")),(0,r.kt)("h3",{id:"referrer-policy"},"Referrer-Policy"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTTP/Headers/Referrer-Policy"},"This header")," controls how much information the browser includes when navigating from the current website (origin) to another."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  key: 'Referrer-Policy',\n  value: 'origin-when-cross-origin'\n}\n")),(0,r.kt)("h3",{id:"content-security-policy"},"Content-Security-Policy"),(0,r.kt)("p",null,"Learn more about adding a ",(0,r.kt)("a",{parentName:"p",href:"/docs/app/building-your-application/configuring/content-security-policy"},"Content Security Policy")," to your application."),(0,r.kt)("h2",{id:"version-history"},"Version History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Version"),(0,r.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v13.3.0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"missing")," added.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v10.2.0")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"has")," added.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"v9.5.0")),(0,r.kt)("td",{parentName:"tr",align:null},"Headers added.")))))}c.isMDXComponent=!0}}]);