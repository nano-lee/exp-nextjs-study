"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[2721],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),c=s(n),m=i,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=m;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r[c]="string"==typeof e?e:i,l[1]=r;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7951:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>s});var a=n(7462),i=(n(7294),n(3905));const o={sidebar_position:8,title:"Internationalization (i18n) Routing",sidebar_label:"Internationalization",description:"Next.js has built-in support for internationalized routing and language detection. Learn more here."},l=void 0,r={unversionedId:"pages/building-your-application/routing/internationalization",id:"pages/building-your-application/routing/internationalization",title:"Internationalization (i18n) Routing",description:"Next.js has built-in support for internationalized routing and language detection. Learn more here.",source:"@site/docs/03-pages/01-building-your-application/01-routing/08-internationalization.mdx",sourceDirName:"03-pages/01-building-your-application/01-routing",slug:"/pages/building-your-application/routing/internationalization",permalink:"/nano-nextjs-study/docs/pages/building-your-application/routing/internationalization",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-pages/01-building-your-application/01-routing/08-internationalization.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Internationalization (i18n) Routing",sidebar_label:"Internationalization",description:"Next.js has built-in support for internationalized routing and language detection. Learn more here."},sidebar:"tutorialSidebar",previous:{title:"API Routes",permalink:"/nano-nextjs-study/docs/pages/building-your-application/routing/api-routes"},next:{title:"Authenticating",permalink:"/nano-nextjs-study/docs/pages/building-your-application/routing/authenticating"}},p={},s=[{value:"Getting started",id:"getting-started",level:2},{value:"Locale Strategies",id:"locale-strategies",level:2},{value:"Sub-path Routing",id:"sub-path-routing",level:3},{value:"Domain Routing",id:"domain-routing",level:3},{value:"Automatic Locale Detection",id:"automatic-locale-detection",level:2},{value:"Prefixing the Default Locale",id:"prefixing-the-default-locale",level:3},{value:"Disabling Automatic Locale Detection",id:"disabling-automatic-locale-detection",level:3},{value:"Accessing the locale information",id:"accessing-the-locale-information",level:2},{value:"Transition between locales",id:"transition-between-locales",level:2},{value:"Leveraging the <code>NEXT_LOCALE</code> cookie",id:"leveraging-the-next_locale-cookie",level:2},{value:"Search Engine Optimization",id:"search-engine-optimization",level:2},{value:"How does this work with Static Generation?",id:"how-does-this-work-with-static-generation",level:2},{value:"Dynamic Routes and <code>getStaticProps</code> Pages",id:"dynamic-routes-and-getstaticprops-pages",level:3},{value:"Automatically Statically Optimized Pages",id:"automatically-statically-optimized-pages",level:3},{value:"Non-dynamic getStaticProps Pages",id:"non-dynamic-getstaticprops-pages",level:3},{value:"Limits for the i18n config",id:"limits-for-the-i18n-config",level:2}],u={toc:s},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Examples"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/vercel/next.js/tree/canary/examples/i18n-routing"},"i18n routing")))),(0,i.kt)("p",null,"Next.js has built-in support for internationalized (",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Internationalization_and_localization#Naming"},"i18n"),") routing since ",(0,i.kt)("inlineCode",{parentName:"p"},"v10.0.0"),". You can provide a list of locales, the default locale, and domain-specific locales and Next.js will automatically handle the routing."),(0,i.kt)("p",null,"The i18n routing support is currently meant to complement existing i18n library solutions like ",(0,i.kt)("a",{parentName:"p",href:"https://formatjs.io/docs/getting-started/installation"},(0,i.kt)("inlineCode",{parentName:"a"},"react-intl")),", ",(0,i.kt)("a",{parentName:"p",href:"https://react.i18next.com/"},(0,i.kt)("inlineCode",{parentName:"a"},"react-i18next")),", ",(0,i.kt)("a",{parentName:"p",href:"https://lingui.dev/"},(0,i.kt)("inlineCode",{parentName:"a"},"lingui")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lukeed/rosetta"},(0,i.kt)("inlineCode",{parentName:"a"},"rosetta")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/amannn/next-intl"},(0,i.kt)("inlineCode",{parentName:"a"},"next-intl")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/aralroca/next-translate"},(0,i.kt)("inlineCode",{parentName:"a"},"next-translate")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Avansai/next-multilingual"},(0,i.kt)("inlineCode",{parentName:"a"},"next-multilingual")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ivanhofer/typesafe-i18n"},(0,i.kt)("inlineCode",{parentName:"a"},"typesafe-i18n")),", ",(0,i.kt)("a",{parentName:"p",href:"https://tolgee.io/integrations/next"},(0,i.kt)("inlineCode",{parentName:"a"},"tolgee")),", and others by streamlining the routes and locale parsing."),(0,i.kt)("h2",{id:"getting-started"},"Getting started"),(0,i.kt)("p",null,"To get started, add the ",(0,i.kt)("inlineCode",{parentName:"p"},"i18n")," config to your ",(0,i.kt)("inlineCode",{parentName:"p"},"next.config.js")," file."),(0,i.kt)("p",null,"Locales are ",(0,i.kt)("a",{parentName:"p",href:"https://www.unicode.org/reports/tr35/tr35-59/tr35.html#Identifiers"},"UTS Locale Identifiers"),", a standardized format for defining locales."),(0,i.kt)("p",null,"Generally a Locale Identifier is made up of a language, region, and script separated by a dash: ",(0,i.kt)("inlineCode",{parentName:"p"},"language-region-script"),". The region and script are optional. An example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"en-US")," - English as spoken in the United States"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nl-NL")," - Dutch as spoken in the Netherlands"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nl")," - Dutch, no specific region")),(0,i.kt)("p",null,"If user locale is ",(0,i.kt)("inlineCode",{parentName:"p"},"nl-BE")," and it is not listed in your configuration, they will be redirected to ",(0,i.kt)("inlineCode",{parentName:"p"},"nl")," if available, or to the default locale otherwise.\nIf you don't plan to support all regions of a country, it is therefore a good practice to include country locales that will act as fallbacks."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    i18n: {\n        // These are all the locales you want to support in\n        // your application\n        locales: ["en-US", "fr", "nl-NL"],\n        // This is the default locale you want to be used when visiting\n        // a non-locale prefixed path e.g. `/hello`\n        defaultLocale: "en-US",\n        // This is a list of locale domains and the default locale they\n        // should handle (these are only required when setting up domain routing)\n        // Note: subdomains must be included in the domain value to be matched e.g. "fr.example.com".\n        domains: [\n            {\n                domain: "example.com",\n                defaultLocale: "en-US",\n            },\n            {\n                domain: "example.nl",\n                defaultLocale: "nl-NL",\n            },\n            {\n                domain: "example.fr",\n                defaultLocale: "fr",\n                // an optional http field can also be used to test\n                // locale domains locally with http instead of https\n                http: true,\n            },\n        ],\n    },\n};\n')),(0,i.kt)("h2",{id:"locale-strategies"},"Locale Strategies"),(0,i.kt)("p",null,"There are two locale handling strategies: Sub-path Routing and Domain Routing."),(0,i.kt)("h3",{id:"sub-path-routing"},"Sub-path Routing"),(0,i.kt)("p",null,"Sub-path Routing puts the locale in the url path."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    i18n: {\n        locales: ["en-US", "fr", "nl-NL"],\n        defaultLocale: "en-US",\n    },\n};\n')),(0,i.kt)("p",null,"With the above configuration ",(0,i.kt)("inlineCode",{parentName:"p"},"en-US"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fr"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"nl-NL")," will be available to be routed to, and ",(0,i.kt)("inlineCode",{parentName:"p"},"en-US")," is the default locale. If you have a ",(0,i.kt)("inlineCode",{parentName:"p"},"pages/blog.js")," the following urls would be available:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/blog")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/fr/blog")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/nl-nl/blog"))),(0,i.kt)("p",null,"The default locale does not have a prefix."),(0,i.kt)("h3",{id:"domain-routing"},"Domain Routing"),(0,i.kt)("p",null,"By using domain routing you can configure locales to be served from different domains:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    i18n: {\n        locales: ["en-US", "fr", "nl-NL", "nl-BE"],\n        defaultLocale: "en-US",\n\n        domains: [\n            {\n                // Note: subdomains must be included in the domain value to be matched\n                // e.g. www.example.com should be used if that is the expected hostname\n                domain: "example.com",\n                defaultLocale: "en-US",\n            },\n            {\n                domain: "example.fr",\n                defaultLocale: "fr",\n            },\n            {\n                domain: "example.nl",\n                defaultLocale: "nl-NL",\n                // specify other locales that should be redirected\n                // to this domain\n                locales: ["nl-BE"],\n            },\n        ],\n    },\n};\n')),(0,i.kt)("p",null,"For example if you have ",(0,i.kt)("inlineCode",{parentName:"p"},"pages/blog.js")," the following urls will be available:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"example.com/blog")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"www.example.com/blog")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"example.fr/blog")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"example.nl/blog")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"example.nl/nl-BE/blog"))),(0,i.kt)("h2",{id:"automatic-locale-detection"},"Automatic Locale Detection"),(0,i.kt)("p",null,"When a user visits the application root (generally ",(0,i.kt)("inlineCode",{parentName:"p"},"/"),"), Next.js will try to automatically detect which locale the user prefers based on the ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/HTTP/Headers/Accept-Language"},(0,i.kt)("inlineCode",{parentName:"a"},"Accept-Language"))," header and the current domain."),(0,i.kt)("p",null,"If a locale other than the default locale is detected, the user will be redirected to either:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"When using Sub-path Routing:")," The locale prefixed path"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"When using Domain Routing:")," The domain with that locale specified as the default")),(0,i.kt)("p",null,"When using Domain Routing, if a user with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Accept-Language")," header ",(0,i.kt)("inlineCode",{parentName:"p"},"fr;q=0.9")," visits ",(0,i.kt)("inlineCode",{parentName:"p"},"example.com"),", they will be redirected to ",(0,i.kt)("inlineCode",{parentName:"p"},"example.fr")," since that domain handles the ",(0,i.kt)("inlineCode",{parentName:"p"},"fr")," locale by default."),(0,i.kt)("p",null,"When using Sub-path Routing, the user would be redirected to ",(0,i.kt)("inlineCode",{parentName:"p"},"/fr"),"."),(0,i.kt)("h3",{id:"prefixing-the-default-locale"},"Prefixing the Default Locale"),(0,i.kt)("p",null,"With Next.js 12 and ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/routing/middleware"},"Middleware"),", we can add a prefix to the default locale with a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/vercel/next.js/discussions/18419"},"workaround"),"."),(0,i.kt)("p",null,"For example, here's a ",(0,i.kt)("inlineCode",{parentName:"p"},"next.config.js")," file with support for a few languages. Note the ",(0,i.kt)("inlineCode",{parentName:"p"},'"default"')," locale has been added intentionally."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},'module.exports = {\n    i18n: {\n        locales: ["default", "en", "de", "fr"],\n        defaultLocale: "default",\n        localeDetection: false,\n    },\n    trailingSlash: true,\n};\n')),(0,i.kt)("p",null,"Next, we can use ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/routing/middleware"},"Middleware")," to add custom routing rules:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'filename="middleware.ts"',filename:'"middleware.ts"'},'import { NextRequest, NextResponse } from "next/server";\n\nconst PUBLIC_FILE = /\\.(.*)$/;\n\nexport async function middleware(req: NextRequest) {\n    if (\n        req.nextUrl.pathname.startsWith("/_next") ||\n        req.nextUrl.pathname.includes("/api/") ||\n        PUBLIC_FILE.test(req.nextUrl.pathname)\n    ) {\n        return;\n    }\n\n    if (req.nextUrl.locale === "default") {\n        const locale = req.cookies.get("NEXT_LOCALE")?.value || "en";\n\n        return NextResponse.redirect(\n            new URL(\n                `/${locale}${req.nextUrl.pathname}${req.nextUrl.search}`,\n                req.url,\n            ),\n        );\n    }\n}\n')),(0,i.kt)("p",null,"This ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/routing/middleware"},"Middleware")," skips adding the default prefix to ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/routing/api-routes"},"API Routes")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/optimizing/static-assets"},"public")," files like fonts or images. If a request is made to the default locale, we redirect to our prefix ",(0,i.kt)("inlineCode",{parentName:"p"},"/en"),"."),(0,i.kt)("h3",{id:"disabling-automatic-locale-detection"},"Disabling Automatic Locale Detection"),(0,i.kt)("p",null,"The automatic locale detection can be disabled with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'filename="next.config.js"',filename:'"next.config.js"'},"module.exports = {\n    i18n: {\n        localeDetection: false,\n    },\n};\n")),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},"localeDetection")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," Next.js will no longer automatically redirect based on the user's preferred locale and will only provide locale information detected from either the locale based domain or locale path as described above."),(0,i.kt)("h2",{id:"accessing-the-locale-information"},"Accessing the locale information"),(0,i.kt)("p",null,"You can access the locale information via the Next.js router. For example, using the ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/api-reference/functions/use-router"},(0,i.kt)("inlineCode",{parentName:"a"},"useRouter()"))," hook the following properties are available:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"locale")," contains the currently active locale."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"locales")," contains all configured locales."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"defaultLocale")," contains the configured default locale.")),(0,i.kt)("p",null,"When ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/rendering/static-site-generation"},"pre-rendering")," pages with ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"getServerSideProps"),", the locale information is provided in ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/data-fetching/get-static-props"},"the context")," provided to the function."),(0,i.kt)("p",null,"When leveraging ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticPaths"),", the configured locales are provided in the context parameter of the function under ",(0,i.kt)("inlineCode",{parentName:"p"},"locales")," and the configured defaultLocale under ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultLocale"),"."),(0,i.kt)("h2",{id:"transition-between-locales"},"Transition between locales"),(0,i.kt)("p",null,"You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"next/link")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"next/router")," to transition between locales."),(0,i.kt)("p",null,"For ",(0,i.kt)("inlineCode",{parentName:"p"},"next/link"),", a ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," prop can be provided to transition to a different locale from the currently active one. If no ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," prop is provided, the currently active ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," is used during client-transitions. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import Link from "next/link";\n\nexport default function IndexPage(props) {\n    return (\n        <Link href="/another" locale="fr">\n            To /fr/another\n        </Link>\n    );\n}\n')),(0,i.kt)("p",null,"When using the ",(0,i.kt)("inlineCode",{parentName:"p"},"next/router")," methods directly, you can specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," that should be used via the transition options. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useRouter } from "next/router";\n\nexport default function IndexPage(props) {\n    const router = useRouter();\n\n    return (\n        <div\n            onClick={() => {\n                router.push("/another", "/another", { locale: "fr" });\n            }}\n        >\n            to /fr/another\n        </div>\n    );\n}\n')),(0,i.kt)("p",null,"Note that to handle switching only the ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," while preserving all routing information such as ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/routing/dynamic-routes"},"dynamic route")," query values or hidden href query values, you can provide the ",(0,i.kt)("inlineCode",{parentName:"p"},"href")," parameter as an object:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useRouter } from "next/router";\nconst router = useRouter();\nconst { pathname, asPath, query } = router;\n// change just the locale and maintain all other route information including href\'s query\nrouter.push({ pathname, query }, asPath, { locale: nextLocale });\n')),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/api-reference/functions/use-router#with-url-object"},"here")," for more information on the object structure for ",(0,i.kt)("inlineCode",{parentName:"p"},"router.push"),"."),(0,i.kt)("p",null,"If you have a ",(0,i.kt)("inlineCode",{parentName:"p"},"href")," that already includes the locale you can opt-out of automatically handling the locale prefixing:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import Link from "next/link";\n\nexport default function IndexPage(props) {\n    return (\n        <Link href="/fr/another" locale={false}>\n            To /fr/another\n        </Link>\n    );\n}\n')),(0,i.kt)("h2",{id:"leveraging-the-next_locale-cookie"},"Leveraging the ",(0,i.kt)("inlineCode",{parentName:"h2"},"NEXT_LOCALE")," cookie"),(0,i.kt)("p",null,"Next.js supports overriding the accept-language header with a ",(0,i.kt)("inlineCode",{parentName:"p"},"NEXT_LOCALE=the-locale")," cookie. This cookie can be set using a language switcher and then when a user comes back to the site it will leverage the locale specified in the cookie when redirecting from ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," to the correct locale location."),(0,i.kt)("p",null,"For example, if a user prefers the locale ",(0,i.kt)("inlineCode",{parentName:"p"},"fr")," in their accept-language header but a ",(0,i.kt)("inlineCode",{parentName:"p"},"NEXT_LOCALE=en")," cookie is set the ",(0,i.kt)("inlineCode",{parentName:"p"},"en")," locale when visiting ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," the user will be redirected to the ",(0,i.kt)("inlineCode",{parentName:"p"},"en")," locale location until the cookie is removed or expired."),(0,i.kt)("h2",{id:"search-engine-optimization"},"Search Engine Optimization"),(0,i.kt)("p",null,"Since Next.js knows what language the user is visiting it will automatically add the ",(0,i.kt)("inlineCode",{parentName:"p"},"lang")," attribute to the ",(0,i.kt)("inlineCode",{parentName:"p"},"<html>")," tag."),(0,i.kt)("p",null,"Next.js doesn't know about variants of a page so it's up to you to add the ",(0,i.kt)("inlineCode",{parentName:"p"},"hreflang")," meta tags using ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/api-reference/components/head"},(0,i.kt)("inlineCode",{parentName:"a"},"next/head")),". You can learn more about ",(0,i.kt)("inlineCode",{parentName:"p"},"hreflang")," in the ",(0,i.kt)("a",{parentName:"p",href:"https://support.google.com/webmasters/answer/189077"},"Google Webmasters documentation"),"."),(0,i.kt)("h2",{id:"how-does-this-work-with-static-generation"},"How does this work with Static Generation?"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note that Internationalized Routing does not integrate with ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/deploying/static-exports"},(0,i.kt)("inlineCode",{parentName:"a"},"output: 'export'"))," as it does not leverage the Next.js routing layer. Hybrid Next.js applications that do not use ",(0,i.kt)("inlineCode",{parentName:"p"},"output: 'export'")," are fully supported.")),(0,i.kt)("h3",{id:"dynamic-routes-and-getstaticprops-pages"},"Dynamic Routes and ",(0,i.kt)("inlineCode",{parentName:"h3"},"getStaticProps")," Pages"),(0,i.kt)("p",null,"For pages using ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps")," with ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/routing/dynamic-routes"},"Dynamic Routes"),", all locale variants of the page desired to be prerendered need to be returned from ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/data-fetching/get-static-paths"},(0,i.kt)("inlineCode",{parentName:"a"},"getStaticPaths")),". Along with the ",(0,i.kt)("inlineCode",{parentName:"p"},"params")," object returned for ",(0,i.kt)("inlineCode",{parentName:"p"},"paths"),", you can also return a ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," field specifying which locale you want to render. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'filename="pages/blog/[slug].js"',filename:'"pages/blog/[slug].js"'},'export const getStaticPaths = ({ locales }) => {\n    return {\n        paths: [\n            // if no `locale` is provided only the defaultLocale will be generated\n            { params: { slug: "post-1" }, locale: "en-US" },\n            { params: { slug: "post-1" }, locale: "fr" },\n        ],\n        fallback: true,\n    };\n};\n')),(0,i.kt)("p",null,"For ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/rendering/automatic-static-optimization"},"Automatically Statically Optimized")," and non-dynamic ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps")," pages, ",(0,i.kt)("strong",{parentName:"p"},"a version of the page will be generated for each locale"),". This is important to consider because it can increase build times depending on how many locales are configured inside ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps"),"."),(0,i.kt)("p",null,"For example, if you have 50 locales configured with 10 non-dynamic pages using ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps"),", this means ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps")," will be called 500 times. 50 versions of the 10 pages will be generated during each build."),(0,i.kt)("p",null,"To decrease the build time of dynamic pages with ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps"),", use a ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/api-reference/functions/get-static-paths#fallback-true"},(0,i.kt)("inlineCode",{parentName:"a"},"fallback")," mode"),". This allows you to return only the most popular paths and locales from ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticPaths")," for prerendering during the build. Then, Next.js will build the remaining pages at runtime as they are requested."),(0,i.kt)("h3",{id:"automatically-statically-optimized-pages"},"Automatically Statically Optimized Pages"),(0,i.kt)("p",null,"For pages that are ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/rendering/automatic-static-optimization"},"automatically statically optimized"),", a version of the page will be generated for each locale."),(0,i.kt)("h3",{id:"non-dynamic-getstaticprops-pages"},"Non-dynamic getStaticProps Pages"),(0,i.kt)("p",null,"For non-dynamic ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps")," pages, a version is generated for each locale like above. ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps")," is called with each ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," that is being rendered. If you would like to opt-out of a certain locale from being pre-rendered, you can return ",(0,i.kt)("inlineCode",{parentName:"p"},"notFound: true")," from ",(0,i.kt)("inlineCode",{parentName:"p"},"getStaticProps")," and this variant of the page will not be generated."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"export async function getStaticProps({ locale }) {\n    // Call an external API endpoint to get posts.\n    // You can use any data fetching library\n    const res = await fetch(`https://.../posts?locale=${locale}`);\n    const posts = await res.json();\n\n    if (posts.length === 0) {\n        return {\n            notFound: true,\n        };\n    }\n\n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n        props: {\n            posts,\n        },\n    };\n}\n")),(0,i.kt)("h2",{id:"limits-for-the-i18n-config"},"Limits for the i18n config"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"locales"),": 100 total locales"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"domains"),": 100 total locale domain items")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Good to know"),": These limits have been added initially to prevent potential ",(0,i.kt)("a",{parentName:"p",href:"#dynamic-routes-and-getstaticprops-pages"},"performance issues at build time"),". You can workaround these limits with custom routing using ",(0,i.kt)("a",{parentName:"p",href:"/docs/pages/building-your-application/routing/middleware"},"Middleware")," in Next.js 12.")))}d.isMDXComponent=!0}}]);